#include <avr/pgmspace.h>
#include <avr/wdt.h>

const byte D032x1u[] PROGMEM =  {0x00, 0x3A, 0x30, 0x30, 0x32, 0x30, 0x30, 0x30, 0x34, 0x36, 0x39, 0x41, 0x0D, 0x0A, 0x00, 0x3A, 0x30, 0x30, 0x32, 0x30, 0x30, 0x30, 0x34, 0x32, 0x39, 0x45, 0x0D, 0x0A, 0x00, 0x3A, 0x30, 0x30, 0x32, 0x30, 0x30, 0x30, 0x41, 0x30, 0x34, 0x30, 0x0D, 0x0A};
const byte D032x1l[] PROGMEM =  {0x00, 0x3A, 0x30, 0x30, 0x32, 0x30, 0x30, 0x30, 0x34, 0x35, 0x39, 0x42, 0x0D, 0x0A, 0x00, 0x3A, 0x30, 0x30, 0x32, 0x30, 0x30, 0x30, 0x34, 0x31, 0x39, 0x46, 0x0D, 0x0A, 0x00, 0x3A, 0x30, 0x30, 0x32, 0x30, 0x30, 0x30, 0x41, 0x30, 0x34, 0x30, 0x0D, 0x0A};
const byte D033x1u[] PROGMEM =  {0x00, 0x3A, 0x30, 0x30, 0x32, 0x31, 0x30, 0x30, 0x34, 0x36, 0x39, 0x39, 0x0D, 0x0A, 0x00, 0x3A, 0x30, 0x30, 0x32, 0x31, 0x30, 0x30, 0x34, 0x32, 0x39, 0x44, 0x0D, 0x0A, 0x00, 0x3A, 0x30, 0x30, 0x32, 0x31, 0x30, 0x30, 0x41, 0x30, 0x33, 0x46, 0x0D, 0x0A};
const byte D033x1l[] PROGMEM =  {0x0D, 0x0A, 0x41, 0x0D, 0x0A, 0x30, 0x32, 0x31, 0x30, 0x30, 0x34, 0x35, 0x39, 0x00, 0x3A, 0x30, 0x30, 0x32, 0x31, 0x30, 0x30, 0x34, 0x31, 0x39, 0x45, 0x0D, 0x0A, 0x00, 0x3A, 0x30, 0x30, 0x32, 0x31, 0x30, 0x30, 0x41, 0x30, 0x33, 0x46, 0x0D, 0x0A};
const byte D040x1u[] PROGMEM =  {0x00, 0x3A, 0x30, 0x30, 0x32, 0x38, 0x30, 0x30, 0x34, 0x36, 0x39, 0x32, 0x0D, 0x0A, 0x00, 0x3A, 0x30, 0x30, 0x32, 0x38, 0x30, 0x30, 0x34, 0x32, 0x39, 0x36, 0x0D, 0x0A, 0x00, 0x3A, 0x30, 0x30, 0x32, 0x38, 0x30, 0x30, 0x41, 0x30, 0x33, 0x38, 0x0D, 0x0A};
const byte D040x1l[] PROGMEM =  {0x00, 0x3A, 0x30, 0x30, 0x32, 0x38, 0x30, 0x30, 0x34, 0x35, 0x39, 0x33, 0x0D, 0x0A, 0x00, 0x3A, 0x30, 0x30, 0x32, 0x38, 0x30, 0x30, 0x34, 0x31, 0x39, 0x37, 0x0D, 0x0A, 0x00, 0x3A, 0x30, 0x30, 0x32, 0x38, 0x30, 0x30, 0x41, 0x30, 0x33, 0x38, 0x0D, 0x0A};
const byte D055x1u[] PROGMEM =  {0x00, 0x3A, 0x30, 0x30, 0x33, 0x37, 0x30, 0x30, 0x34, 0x32, 0x38, 0x37, 0x0D, 0x0A, 0x00, 0x3A, 0x30, 0x30, 0x33, 0x37, 0x30, 0x30, 0x41, 0x30, 0x32, 0x39, 0x0D, 0x0A, 0x00, 0x3A, 0x30, 0x34, 0x33, 0x37, 0x30, 0x30, 0x43, 0x30, 0x30, 0x30, 0x30, 0x34, 0x43, 0x46, 0x46, 0x43, 0x33, 0x36, 0x0D, 0x0A};
const byte D055x1l[] PROGMEM =  {0x00, 0x3A, 0x30, 0x30, 0x33, 0x37, 0x30, 0x30, 0x34, 0x31, 0x38, 0x38, 0x0D, 0x0A, 0x00, 0x3A, 0x30, 0x30, 0x33, 0x37, 0x30, 0x30, 0x41, 0x30, 0x32, 0x39, 0x0D, 0x0A, 0x00, 0x3A, 0x30, 0x34, 0x33, 0x37, 0x30, 0x30, 0x43, 0x30, 0x30, 0x30, 0x30, 0x34, 0x43, 0x46, 0x46, 0x43, 0x33, 0x36, 0x0D, 0x0A};
const byte D055x2u[] PROGMEM =  {0x00, 0x3A, 0x30, 0x30, 0x33, 0x37, 0x30, 0x30, 0x34, 0x36, 0x38, 0x33, 0x0D, 0x0A, 0x00, 0x3A, 0x30, 0x30, 0x33, 0x37, 0x30, 0x30, 0x41, 0x30, 0x32, 0x39, 0x0D, 0x0A, 0x00, 0x3A, 0x30, 0x34, 0x33, 0x37, 0x30, 0x30, 0x43, 0x30, 0x30, 0x30, 0x30, 0x34, 0x43, 0x46, 0x46, 0x43, 0x33, 0x36, 0x0D, 0x0A};
const byte D055x2l[] PROGMEM =  {0x00, 0x3A, 0x30, 0x30, 0x33, 0x37, 0x30, 0x30, 0x34, 0x35, 0x38, 0x34, 0x0D, 0x0A, 0x00, 0x3A, 0x30, 0x30, 0x33, 0x37, 0x30, 0x30, 0x41, 0x30, 0x32, 0x39, 0x0D, 0x0A, 0x00, 0x3A, 0x30, 0x34, 0x33, 0x37, 0x30, 0x30, 0x43, 0x30, 0x30, 0x30, 0x30, 0x34, 0x43, 0x46, 0x46, 0x43, 0x33, 0x36, 0x0D, 0x0A};
const byte D059x1u[] PROGMEM =  {0x00, 0x3A, 0x30, 0x30, 0x33, 0x42, 0x30, 0x30, 0x34, 0x32, 0x38, 0x33, 0x0D, 0x0A, 0x00, 0x3A, 0x30, 0x30, 0x33, 0x42, 0x30, 0x30, 0x41, 0x30, 0x32, 0x35, 0x0D, 0x0A, 0x00, 0x3A, 0x30, 0x34, 0x33, 0x42, 0x30, 0x30, 0x43, 0x30, 0x30, 0x30, 0x30, 0x34, 0x43, 0x46, 0x46, 0x43, 0x33, 0x32, 0x0D, 0x0A};
const byte D059x1l[] PROGMEM =  {0x00, 0x3A, 0x30, 0x30, 0x33, 0x42, 0x30, 0x30, 0x34, 0x31, 0x38, 0x34, 0x0D, 0x0A, 0x00, 0x3A, 0x30, 0x30, 0x33, 0x42, 0x30, 0x30, 0x41, 0x30, 0x32, 0x35, 0x0D, 0x0A, 0x00, 0x3A, 0x30, 0x34, 0x33, 0x42, 0x30, 0x30, 0x43, 0x30, 0x30, 0x30, 0x30, 0x34, 0x43, 0x46, 0x46, 0x43, 0x33, 0x32, 0x0D, 0x0A};
const byte D059x2u[] PROGMEM =  {0x00, 0x3A, 0x30, 0x30, 0x33, 0x42, 0x30, 0x30, 0x34, 0x36, 0x37, 0x46, 0x0D, 0x0A, 0x00, 0x3A, 0x30, 0x30, 0x33, 0x42, 0x30, 0x30, 0x41, 0x30, 0x32, 0x35, 0x0D, 0x0A, 0x00, 0x3A, 0x30, 0x34, 0x33, 0x42, 0x30, 0x30, 0x43, 0x30, 0x30, 0x30, 0x30, 0x34, 0x43, 0x46, 0x46, 0x43, 0x33, 0x32, 0x0D, 0x0A};
const byte D059x2l[] PROGMEM =  {0x00, 0x3A, 0x30, 0x30, 0x33, 0x42, 0x30, 0x30, 0x34, 0x35, 0x38, 0x30, 0x0D, 0x0A, 0x00, 0x3A, 0x30, 0x30, 0x33, 0x42, 0x30, 0x30, 0x41, 0x30, 0x32, 0x35, 0x0D, 0x0A, 0x00, 0x3A, 0x30, 0x34, 0x33, 0x42, 0x30, 0x30, 0x43, 0x30, 0x30, 0x30, 0x30, 0x34, 0x43, 0x46, 0x46, 0x43, 0x33, 0x32, 0x0D, 0x0A};
const byte D062x2u[] PROGMEM =  {0x00, 0x3A, 0x30, 0x30, 0x33, 0x45, 0x30, 0x30, 0x34, 0x36, 0x37, 0x43, 0x0D, 0x0A, 0x00, 0x3A, 0x30, 0x30, 0x33, 0x45, 0x30, 0x30, 0x41, 0x30, 0x32, 0x32, 0x0D, 0x0A, 0x00, 0x3A, 0x30, 0x34, 0x33, 0x45, 0x30, 0x30, 0x43, 0x30, 0x30, 0x30, 0x30, 0x34, 0x43, 0x46, 0x46, 0x43, 0x32, 0x46, 0x0D, 0x0A};
const byte D062x2l[] PROGMEM =  {0x00, 0x3A, 0x30, 0x30, 0x33, 0x45, 0x30, 0x30, 0x34, 0x35, 0x37, 0x44, 0x0D, 0x0A, 0x00, 0x3A, 0x30, 0x30, 0x33, 0x45, 0x30, 0x30, 0x41, 0x30, 0x32, 0x32, 0x0D, 0x0A, 0x00, 0x3A, 0x30, 0x34, 0x33, 0x45, 0x30, 0x30, 0x43, 0x30, 0x30, 0x30, 0x30, 0x34, 0x43, 0x46, 0x46, 0x43, 0x32, 0x46, 0x0D, 0x0A};
const byte D063x1u[] PROGMEM =  {0x00, 0x3A, 0x30, 0x30, 0x33, 0x46, 0x30, 0x30, 0x34, 0x32, 0x37, 0x46, 0x0D, 0x0A, 0x00, 0x3A, 0x30, 0x30, 0x33, 0x46, 0x30, 0x30, 0x41, 0x30, 0x32, 0x31, 0x0D, 0x0A, 0x00, 0x3A, 0x30, 0x34, 0x33, 0x46, 0x30, 0x30, 0x43, 0x30, 0x30, 0x30, 0x30, 0x34, 0x43, 0x46, 0x46, 0x43, 0x32, 0x45, 0x0D, 0x0A};
const byte D063x1l[] PROGMEM =  {0x00, 0x3A, 0x30, 0x30, 0x33, 0x46, 0x30, 0x30, 0x34, 0x31, 0x38, 0x30, 0x0D, 0x0A, 0x00, 0x3A, 0x30, 0x30, 0x33, 0x46, 0x30, 0x30, 0x41, 0x30, 0x32, 0x31, 0x0D, 0x0A, 0x00, 0x3A, 0x30, 0x34, 0x33, 0x46, 0x30, 0x30, 0x43, 0x30, 0x30, 0x30, 0x30, 0x34, 0x43, 0x46, 0x46, 0x43, 0x32, 0x45, 0x0D, 0x0A};
const byte D063x2u[] PROGMEM =  {0x00, 0x3A, 0x30, 0x30, 0x33, 0x46, 0x30, 0x30, 0x34, 0x36, 0x37, 0x42, 0x0D, 0x0A, 0x00, 0x3A, 0x30, 0x30, 0x33, 0x46, 0x30, 0x30, 0x41, 0x30, 0x32, 0x31, 0x0D, 0x0A, 0x00, 0x3A, 0x30, 0x34, 0x33, 0x46, 0x30, 0x30, 0x43, 0x30, 0x30, 0x30, 0x30, 0x34, 0x43, 0x46, 0x46, 0x43, 0x32, 0x45, 0x0D, 0x0A};
const byte D063x2l[] PROGMEM =  {0x00, 0x3A, 0x30, 0x30, 0x33, 0x46, 0x30, 0x30, 0x34, 0x35, 0x37, 0x43, 0x0D, 0x0A, 0x00, 0x3A, 0x30, 0x30, 0x33, 0x46, 0x30, 0x30, 0x41, 0x30, 0x32, 0x31, 0x0D, 0x0A, 0x00, 0x3A, 0x30, 0x34, 0x33, 0x46, 0x30, 0x30, 0x43, 0x30, 0x30, 0x30, 0x30, 0x34, 0x43, 0x46, 0x46, 0x43, 0x32, 0x45, 0x0D, 0x0A};
const byte D067x1u[] PROGMEM =  {0x00, 0x3A, 0x30, 0x30, 0x34, 0x33, 0x30, 0x30, 0x34, 0x32, 0x37, 0x42, 0x0D, 0x0A, 0x00, 0x3A, 0x30, 0x30, 0x34, 0x33, 0x30, 0x30, 0x41, 0x30, 0x31, 0x44, 0x0D, 0x0A, 0x00, 0x3A, 0x30, 0x34, 0x34, 0x33, 0x30, 0x30, 0x43, 0x30, 0x30, 0x30, 0x30, 0x34, 0x43, 0x46, 0x46, 0x43, 0x32, 0x41, 0x0D, 0x0A};
const byte D067x1l[] PROGMEM =  {0x00, 0x3A, 0x30, 0x30, 0x34, 0x33, 0x30, 0x30, 0x34, 0x31, 0x37, 0x43, 0x0D, 0x0A, 0x00, 0x3A, 0x30, 0x30, 0x34, 0x33, 0x30, 0x30, 0x41, 0x30, 0x31, 0x44, 0x0D, 0x0A, 0x00, 0x3A, 0x30, 0x34, 0x34, 0x33, 0x30, 0x30, 0x43, 0x30, 0x30, 0x30, 0x30, 0x34, 0x43, 0x46, 0x46, 0x43, 0x32, 0x41, 0x0D, 0x0A};
const byte D067x2u[] PROGMEM =  {0x00, 0x3A, 0x30, 0x30, 0x34, 0x33, 0x30, 0x30, 0x34, 0x36, 0x37, 0x37, 0x0D, 0x0A, 0x00, 0x3A, 0x30, 0x30, 0x34, 0x33, 0x30, 0x30, 0x41, 0x30, 0x31, 0x44, 0x0D, 0x0A, 0x00, 0x3A, 0x30, 0x34, 0x34, 0x33, 0x30, 0x30, 0x43, 0x30, 0x30, 0x30, 0x30, 0x34, 0x43, 0x46, 0x46, 0x43, 0x32, 0x41, 0x0D, 0x0A};
const byte D067x2l[] PROGMEM =  {0x00, 0x3A, 0x30, 0x30, 0x34, 0x33, 0x30, 0x30, 0x34, 0x35, 0x37, 0x38, 0x0D, 0x0A, 0x00, 0x3A, 0x30, 0x30, 0x34, 0x33, 0x30, 0x30, 0x41, 0x30, 0x31, 0x44, 0x0D, 0x0A, 0x00, 0x3A, 0x30, 0x34, 0x34, 0x33, 0x30, 0x30, 0x43, 0x30, 0x30, 0x30, 0x30, 0x34, 0x43, 0x46, 0x46, 0x43, 0x32, 0x41, 0x0D, 0x0A};
const byte D088x1u[] PROGMEM =  {0x00, 0x3A, 0x30, 0x30, 0x35, 0x38, 0x30, 0x30, 0x34, 0x36, 0x36, 0x32, 0x0D, 0x0A, 0x00, 0x3A, 0x30, 0x30, 0x35, 0x38, 0x30, 0x30, 0x34, 0x32, 0x36, 0x36, 0x0D, 0x0A, 0x00, 0x3A, 0x30, 0x30, 0x35, 0x38, 0x30, 0x30, 0x41, 0x30, 0x30, 0x38, 0x0D, 0x0A};
const byte D088x1l[] PROGMEM =  {0x00, 0x3A, 0x30, 0x30, 0x35, 0x38, 0x30, 0x30, 0x34, 0x35, 0x36, 0x33, 0x0D, 0x0A, 0x00, 0x3A, 0x30, 0x30, 0x35, 0x38, 0x30, 0x30, 0x34, 0x31, 0x36, 0x37, 0x0D, 0x0A, 0x00, 0x3A, 0x30, 0x30, 0x35, 0x38, 0x30, 0x30, 0x41, 0x30, 0x30, 0x38, 0x0D, 0x0A};
const byte D089x1u[] PROGMEM =  {0x00, 0x3A, 0x30, 0x30, 0x35, 0x39, 0x30, 0x30, 0x34, 0x36, 0x36, 0x31, 0x0D, 0x0A, 0x00, 0x3A, 0x30, 0x30, 0x35, 0x39, 0x30, 0x30, 0x34, 0x32, 0x36, 0x35, 0x0D, 0x0A, 0x00, 0x3A, 0x30, 0x30, 0x35, 0x39, 0x30, 0x30, 0x41, 0x30, 0x30, 0x37, 0x0D, 0x0A};
const byte D089x1l[] PROGMEM =  {0x00, 0x3A, 0x30, 0x30, 0x35, 0x39, 0x30, 0x30, 0x34, 0x35, 0x36, 0x32, 0x0D, 0x0A, 0x00, 0x3A, 0x30, 0x30, 0x35, 0x39, 0x30, 0x30, 0x34, 0x31, 0x36, 0x36, 0x0D, 0x0A, 0x00, 0x3A, 0x30, 0x30, 0x35, 0x39, 0x30, 0x30, 0x41, 0x30, 0x30, 0x37, 0x0D, 0x0A};
const byte D091x1u[] PROGMEM =  {0x00, 0x3A, 0x30, 0x30, 0x35, 0x42, 0x30, 0x30, 0x34, 0x36, 0x35, 0x46, 0x0D, 0x0A, 0x00, 0x3A, 0x30, 0x30, 0x35, 0x42, 0x30, 0x30, 0x34, 0x32, 0x36, 0x33, 0x0D, 0x0A, 0x00, 0x3A, 0x30, 0x30, 0x35, 0x42, 0x30, 0x30, 0x41, 0x30, 0x30, 0x35, 0x0D, 0x0A};
const byte D091x1l[] PROGMEM =  {0x00, 0x3A, 0x30, 0x30, 0x35, 0x42, 0x30, 0x30, 0x34, 0x35, 0x36, 0x30, 0x0D, 0x0A, 0x00, 0x3A, 0x30, 0x30, 0x35, 0x42, 0x30, 0x30, 0x34, 0x31, 0x36, 0x34, 0x0D, 0x0A, 0x00, 0x3A, 0x30, 0x30, 0x35, 0x42, 0x30, 0x30, 0x41, 0x30, 0x30, 0x35, 0x0D, 0x0A};
const byte D096x1u[] PROGMEM =  {0x00, 0x3A, 0x30, 0x30, 0x36, 0x30, 0x30, 0x30, 0x34, 0x32, 0x35, 0x45, 0x0D, 0x0A, 0x00, 0x3A, 0x30, 0x30, 0x36, 0x30, 0x30, 0x30, 0x41, 0x30, 0x30, 0x30, 0x0D, 0x0A, 0x00, 0x3A, 0x30, 0x34, 0x36, 0x30, 0x30, 0x30, 0x43, 0x30, 0x30, 0x30, 0x30, 0x34, 0x43, 0x46, 0x46, 0x43, 0x30, 0x44, 0x0D, 0x0A};
const byte D096x1l[] PROGMEM =  {0x00, 0x3A, 0x30, 0x30, 0x36, 0x30, 0x30, 0x30, 0x34, 0x31, 0x35, 0x46, 0x0D, 0x0A, 0x00, 0x3A, 0x30, 0x30, 0x36, 0x30, 0x30, 0x30, 0x41, 0x30, 0x30, 0x30, 0x0D, 0x0A, 0x00, 0x3A, 0x30, 0x34, 0x36, 0x30, 0x30, 0x30, 0x43, 0x30, 0x30, 0x30, 0x30, 0x34, 0x43, 0x46, 0x46, 0x43, 0x30, 0x44, 0x0D, 0x0A};
const byte D096x2u[] PROGMEM =  {0x00, 0x3A, 0x30, 0x30, 0x36, 0x30, 0x30, 0x30, 0x34, 0x36, 0x35, 0x41, 0x0D, 0x0A, 0x00, 0x3A, 0x30, 0x30, 0x36, 0x30, 0x30, 0x30, 0x41, 0x30, 0x30, 0x30, 0x0D, 0x0A, 0x00, 0x3A, 0x30, 0x34, 0x36, 0x30, 0x30, 0x30, 0x43, 0x30, 0x30, 0x30, 0x30, 0x34, 0x43, 0x46, 0x46, 0x43, 0x30, 0x44, 0x0D, 0x0A};
const byte D096x2l[] PROGMEM =  {0x00, 0x3A, 0x30, 0x30, 0x36, 0x30, 0x30, 0x30, 0x34, 0x35, 0x35, 0x42, 0x0D, 0x0A, 0x00, 0x3A, 0x30, 0x30, 0x36, 0x30, 0x30, 0x30, 0x41, 0x30, 0x30, 0x30, 0x0D, 0x0A, 0x00, 0x3A, 0x30, 0x34, 0x36, 0x30, 0x30, 0x30, 0x43, 0x30, 0x30, 0x30, 0x30, 0x34, 0x43, 0x46, 0x46, 0x43, 0x30, 0x44, 0x0D, 0x0A};
const byte D099x1u[] PROGMEM =  {0x00, 0x3A, 0x30, 0x30, 0x36, 0x33, 0x30, 0x30, 0x34, 0x32, 0x35, 0x42, 0x0D, 0x0A, 0x00, 0x3A, 0x30, 0x30, 0x36, 0x33, 0x30, 0x30, 0x41, 0x30, 0x46, 0x44, 0x0D, 0x0A, 0x00, 0x3A, 0x30, 0x34, 0x36, 0x33, 0x30, 0x30, 0x43, 0x30, 0x30, 0x30, 0x30, 0x34, 0x43, 0x46, 0x46, 0x43, 0x30, 0x41, 0x0D, 0x0A};
const byte D099x1l[] PROGMEM =  {0x00, 0x3A, 0x30, 0x30, 0x36, 0x33, 0x30, 0x30, 0x34, 0x31, 0x35, 0x43, 0x0D, 0x0A, 0x00, 0x3A, 0x30, 0x30, 0x36, 0x33, 0x30, 0x30, 0x41, 0x30, 0x46, 0x44, 0x0D, 0x0A, 0x00, 0x3A, 0x30, 0x34, 0x36, 0x33, 0x30, 0x30, 0x43, 0x30, 0x30, 0x30, 0x30, 0x34, 0x43, 0x46, 0x46, 0x43, 0x30, 0x41, 0x0D, 0x0A};
const byte D099x2u[] PROGMEM =  {0x00, 0x3A, 0x30, 0x30, 0x36, 0x33, 0x30, 0x30, 0x34, 0x36, 0x35, 0x37, 0x0D, 0x0A, 0x00, 0x3A, 0x30, 0x30, 0x36, 0x33, 0x30, 0x30, 0x41, 0x30, 0x46, 0x44, 0x0D, 0x0A, 0x00, 0x3A, 0x30, 0x34, 0x36, 0x33, 0x30, 0x30, 0x43, 0x30, 0x30, 0x30, 0x30, 0x34, 0x43, 0x46, 0x46, 0x43, 0x30, 0x41, 0x0D, 0x0A};
const byte D099x2l[] PROGMEM =  {0x00, 0x3A, 0x30, 0x30, 0x36, 0x33, 0x30, 0x30, 0x34, 0x35, 0x35, 0x38, 0x0D, 0x0A, 0x00, 0x3A, 0x30, 0x30, 0x36, 0x33, 0x30, 0x30, 0x41, 0x30, 0x46, 0x44, 0x0D, 0x0A, 0x00, 0x3A, 0x30, 0x34, 0x36, 0x33, 0x30, 0x30, 0x43, 0x30, 0x30, 0x30, 0x30, 0x34, 0x43, 0x46, 0x46, 0x43, 0x30, 0x41, 0x0D, 0x0A};
const byte D100x1u[] PROGMEM =  {0x00, 0x3A, 0x30, 0x30, 0x36, 0x34, 0x30, 0x30, 0x34, 0x32, 0x35, 0x41, 0x0D, 0x0A, 0x00, 0x3A, 0x30, 0x30, 0x36, 0x34, 0x30, 0x30, 0x41, 0x30, 0x46, 0x43, 0x0D, 0x0A, 0x00, 0x3A, 0x30, 0x34, 0x36, 0x34, 0x30, 0x30, 0x43, 0x30, 0x30, 0x30, 0x30, 0x34, 0x43, 0x46, 0x46, 0x43, 0x30, 0x39, 0x0D, 0x0A};
const byte D100x1l[] PROGMEM =  {0x00, 0x3A, 0x30, 0x30, 0x36, 0x34, 0x30, 0x30, 0x34, 0x31, 0x35, 0x42, 0x0D, 0x0A, 0x00, 0x3A, 0x30, 0x30, 0x36, 0x34, 0x30, 0x30, 0x41, 0x30, 0x46, 0x43, 0x0D, 0x0A, 0x00, 0x3A, 0x30, 0x34, 0x36, 0x34, 0x30, 0x30, 0x43, 0x30, 0x30, 0x30, 0x30, 0x34, 0x43, 0x46, 0x46, 0x43, 0x30, 0x39, 0x0D, 0x0A};
const byte D100x2u[] PROGMEM =  {0x00, 0x3A, 0x30, 0x30, 0x36, 0x34, 0x30, 0x30, 0x34, 0x36, 0x35, 0x36, 0x0D, 0x0A, 0x00, 0x3A, 0x30, 0x30, 0x36, 0x34, 0x30, 0x30, 0x41, 0x30, 0x46, 0x43, 0x0D, 0x0A, 0x00, 0x3A, 0x30, 0x34, 0x36, 0x34, 0x30, 0x30, 0x43, 0x30, 0x30, 0x30, 0x30, 0x34, 0x43, 0x46, 0x46, 0x43, 0x30, 0x39, 0x0D, 0x0A};
const byte D100x2l[] PROGMEM =  {0x00, 0x3A, 0x30, 0x30, 0x36, 0x34, 0x30, 0x30, 0x34, 0x35, 0x35, 0x37, 0x0D, 0x0A, 0x00, 0x3A, 0x30, 0x30, 0x36, 0x34, 0x30, 0x30, 0x41, 0x30, 0x46, 0x43, 0x0D, 0x0A, 0x00, 0x3A, 0x30, 0x34, 0x36, 0x34, 0x30, 0x30, 0x43, 0x30, 0x30, 0x30, 0x30, 0x34, 0x43, 0x46, 0x46, 0x43, 0x30, 0x39, 0x0D, 0x0A};
const byte D104x1u[] PROGMEM =  {0x00, 0x3A, 0x30, 0x30, 0x36, 0x38, 0x30, 0x30, 0x34, 0x32, 0x35, 0x36, 0x0D, 0x0A, 0x00, 0x3A, 0x30, 0x30, 0x36, 0x38, 0x30, 0x30, 0x41, 0x30, 0x46, 0x38, 0x0D, 0x0A, 0x00, 0x3A, 0x30, 0x34, 0x36, 0x38, 0x30, 0x30, 0x43, 0x30, 0x30, 0x30, 0x30, 0x34, 0x43, 0x46, 0x46, 0x43, 0x30, 0x35, 0x0D, 0x0A};
const byte D104x1l[] PROGMEM =  {0x00, 0x3A, 0x30, 0x30, 0x36, 0x38, 0x30, 0x30, 0x34, 0x31, 0x35, 0x37, 0x0D, 0x0A, 0x00, 0x3A, 0x30, 0x30, 0x36, 0x38, 0x30, 0x30, 0x41, 0x30, 0x46, 0x38, 0x0D, 0x0A, 0x00, 0x3A, 0x30, 0x34, 0x36, 0x38, 0x30, 0x30, 0x43, 0x30, 0x30, 0x30, 0x30, 0x34, 0x43, 0x46, 0x46, 0x43, 0x30, 0x35, 0x0D, 0x0A};
const byte D104x2u[] PROGMEM =  {0x00, 0x3A, 0x30, 0x30, 0x36, 0x38, 0x30, 0x30, 0x34, 0x36, 0x35, 0x32, 0x0D, 0x0A, 0x00, 0x3A, 0x30, 0x30, 0x36, 0x38, 0x30, 0x30, 0x41, 0x30, 0x46, 0x38, 0x0D, 0x0A, 0x00, 0x3A, 0x30, 0x34, 0x36, 0x38, 0x30, 0x30, 0x43, 0x30, 0x30, 0x30, 0x30, 0x34, 0x43, 0x46, 0x46, 0x43, 0x30, 0x35, 0x0D, 0x0A};
const byte D104x2l[] PROGMEM =  {0x00, 0x3A, 0x30, 0x30, 0x36, 0x38, 0x30, 0x30, 0x34, 0x35, 0x35, 0x33, 0x0D, 0x0A, 0x00, 0x3A, 0x30, 0x30, 0x36, 0x38, 0x30, 0x30, 0x41, 0x30, 0x46, 0x38, 0x0D, 0x0A, 0x00, 0x3A, 0x30, 0x34, 0x36, 0x38, 0x30, 0x30, 0x43, 0x30, 0x30, 0x30, 0x30, 0x34, 0x43, 0x46, 0x46, 0x43, 0x30, 0x35, 0x0D, 0x0A};
const byte D105x1u[] PROGMEM =  {0x00, 0x3A, 0x30, 0x30, 0x36, 0x39, 0x30, 0x30, 0x34, 0x32, 0x35, 0x35, 0x0D, 0x0A, 0x00, 0x3A, 0x30, 0x30, 0x36, 0x39, 0x30, 0x30, 0x41, 0x30, 0x46, 0x37, 0x0D, 0x0A, 0x00, 0x3A, 0x30, 0x34, 0x36, 0x39, 0x30, 0x30, 0x43, 0x30, 0x30, 0x30, 0x30, 0x34, 0x43, 0x46, 0x46, 0x43, 0x30, 0x34, 0x0D, 0x0A};
const byte D105x1l[] PROGMEM =  {0x00, 0x3A, 0x30, 0x30, 0x36, 0x39, 0x30, 0x30, 0x34, 0x31, 0x35, 0x36, 0x0D, 0x0A, 0x00, 0x3A, 0x30, 0x30, 0x36, 0x39, 0x30, 0x30, 0x41, 0x30, 0x46, 0x37, 0x0D, 0x0A, 0x00, 0x3A, 0x30, 0x34, 0x36, 0x39, 0x30, 0x30, 0x43, 0x30, 0x30, 0x30, 0x30, 0x34, 0x43, 0x46, 0x46, 0x43, 0x30, 0x34, 0x0D, 0x0A};
const byte D105x2u[] PROGMEM =  {0x00, 0x3A, 0x30, 0x30, 0x36, 0x39, 0x30, 0x30, 0x34, 0x36, 0x35, 0x31, 0x0D, 0x0A, 0x00, 0x3A, 0x30, 0x30, 0x36, 0x39, 0x30, 0x30, 0x41, 0x30, 0x46, 0x37, 0x0D, 0x0A, 0x00, 0x3A, 0x30, 0x34, 0x36, 0x39, 0x30, 0x30, 0x43, 0x30, 0x30, 0x30, 0x30, 0x34, 0x43, 0x46, 0x46, 0x43, 0x30, 0x34, 0x0D, 0x0A};
const byte D105x2l[] PROGMEM =  {0x00, 0x3A, 0x30, 0x30, 0x36, 0x39, 0x30, 0x30, 0x34, 0x35, 0x35, 0x32, 0x0D, 0x0A, 0x00, 0x3A, 0x30, 0x30, 0x36, 0x39, 0x30, 0x30, 0x41, 0x30, 0x46, 0x37, 0x0D, 0x0A, 0x00, 0x3A, 0x30, 0x34, 0x36, 0x39, 0x30, 0x30, 0x43, 0x30, 0x30, 0x30, 0x30, 0x34, 0x43, 0x46, 0x46, 0x43, 0x30, 0x34, 0x0D, 0x0A};
const byte D115x1u[] PROGMEM =  {0x00, 0x3A, 0x30, 0x30, 0x37, 0x33, 0x30, 0x30, 0x34, 0x36, 0x34, 0x37, 0x0D, 0x0A, 0x00, 0x3A, 0x30, 0x30, 0x37, 0x33, 0x30, 0x30, 0x34, 0x32, 0x34, 0x42, 0x0D, 0x0A, 0x00, 0x3A, 0x30, 0x30, 0x37, 0x33, 0x30, 0x30, 0x41, 0x30, 0x45, 0x44, 0x0D, 0x0A};
const byte D115x1l[] PROGMEM =  {0x00, 0x3A, 0x30, 0x30, 0x37, 0x33, 0x30, 0x30, 0x34, 0x35, 0x34, 0x38, 0x0D, 0x0A, 0x00, 0x3A, 0x30, 0x30, 0x37, 0x33, 0x30, 0x30, 0x34, 0x31, 0x34, 0x43, 0x0D, 0x0A, 0x00, 0x3A, 0x30, 0x30, 0x37, 0x33, 0x30, 0x30, 0x41, 0x30, 0x45, 0x44, 0x0D, 0x0A};
const byte D117x1u[] PROGMEM =  {0x00, 0x3A, 0x30, 0x30, 0x37, 0x35, 0x30, 0x30, 0x34, 0x36, 0x34, 0x35, 0x0D, 0x0A, 0x00, 0x3A, 0x30, 0x30, 0x37, 0x35, 0x30, 0x30, 0x34, 0x32, 0x34, 0x39, 0x0D, 0x0A, 0x00, 0x3A, 0x30, 0x30, 0x37, 0x35, 0x30, 0x30, 0x41, 0x30, 0x45, 0x42, 0x0D, 0x0A};
const byte D117x1l[] PROGMEM =  {0x00, 0x3A, 0x30, 0x30, 0x37, 0x35, 0x30, 0x30, 0x34, 0x35, 0x34, 0x36, 0x0D, 0x0A, 0x00, 0x3A, 0x30, 0x30, 0x37, 0x35, 0x30, 0x30, 0x34, 0x31, 0x34, 0x41, 0x0D, 0x0A, 0x00, 0x3A, 0x30, 0x30, 0x37, 0x35, 0x30, 0x30, 0x41, 0x30, 0x45, 0x42, 0x0D, 0x0A};
const byte D118x1u[] PROGMEM =  {0x00, 0x3A, 0x30, 0x30, 0x37, 0x36, 0x30, 0x30, 0x34, 0x36, 0x34, 0x34, 0x0D, 0x0A, 0x00, 0x3A, 0x30, 0x30, 0x37, 0x36, 0x30, 0x30, 0x34, 0x32, 0x34, 0x38, 0x0D, 0x0A, 0x00, 0x3A, 0x30, 0x30, 0x37, 0x36, 0x30, 0x30, 0x41, 0x30, 0x45, 0x41, 0x0D, 0x0A};
const byte D118x1l[] PROGMEM =  {0x00, 0x3A, 0x30, 0x30, 0x37, 0x36, 0x30, 0x30, 0x34, 0x35, 0x34, 0x35, 0x0D, 0x0A, 0x00, 0x3A, 0x30, 0x30, 0x37, 0x36, 0x30, 0x30, 0x34, 0x31, 0x34, 0x39, 0x0D, 0x0A, 0x00, 0x3A, 0x30, 0x30, 0x37, 0x36, 0x30, 0x30, 0x41, 0x30, 0x45, 0x41, 0x0D, 0x0A};
const byte D122x1u[] PROGMEM =  {0x00, 0x3A, 0x30, 0x30, 0x37, 0x41, 0x30, 0x30, 0x34, 0x36, 0x34, 0x30, 0x0D, 0x0A, 0x00, 0x3A, 0x30, 0x30, 0x37, 0x41, 0x30, 0x30, 0x34, 0x32, 0x34, 0x34, 0x0D, 0x0A, 0x00, 0x3A, 0x30, 0x30, 0x37, 0x41, 0x30, 0x30, 0x41, 0x30, 0x45, 0x36, 0x0D, 0x0A};
const byte D122x1l[] PROGMEM =  {0x00, 0x3A, 0x30, 0x30, 0x37, 0x41, 0x30, 0x30, 0x34, 0x35, 0x34, 0x31, 0x0D, 0x0A, 0x00, 0x3A, 0x30, 0x30, 0x37, 0x41, 0x30, 0x30, 0x34, 0x31, 0x34, 0x35, 0x0D, 0x0A, 0x00, 0x3A, 0x30, 0x30, 0x37, 0x41, 0x30, 0x30, 0x41, 0x30, 0x45, 0x36, 0x0D, 0x0A};
const byte D126x1u[] PROGMEM =  {0x00, 0x3A, 0x30, 0x30, 0x37, 0x45, 0x30, 0x30, 0x34, 0x32, 0x34, 0x30, 0x0D, 0x0A, 0x00, 0x3A, 0x30, 0x30, 0x37, 0x45, 0x30, 0x30, 0x41, 0x30, 0x45, 0x32, 0x0D, 0x0A, 0x00, 0x3A, 0x30, 0x34, 0x37, 0x45, 0x30, 0x30, 0x43, 0x30, 0x30, 0x30, 0x30, 0x34, 0x43, 0x46, 0x46, 0x43, 0x45, 0x46, 0x0D, 0x0A};
const byte D126x1l[] PROGMEM =  {0x00, 0x3A, 0x30, 0x30, 0x37, 0x45, 0x30, 0x30, 0x34, 0x31, 0x34, 0x31, 0x0D, 0x0A, 0x00, 0x3A, 0x30, 0x30, 0x37, 0x45, 0x30, 0x30, 0x41, 0x30, 0x45, 0x32, 0x0D, 0x0A, 0x00, 0x3A, 0x30, 0x34, 0x37, 0x45, 0x30, 0x30, 0x43, 0x30, 0x30, 0x30, 0x30, 0x34, 0x43, 0x46, 0x46, 0x43, 0x45, 0x46, 0x0D, 0x0A};
const byte D126x2u[] PROGMEM =  {0x00, 0x3A, 0x30, 0x30, 0x37, 0x45, 0x30, 0x30, 0x34, 0x36, 0x33, 0x43, 0x0D, 0x0A, 0x00, 0x3A, 0x30, 0x30, 0x37, 0x45, 0x30, 0x30, 0x41, 0x30, 0x45, 0x32, 0x0D, 0x0A, 0x00, 0x3A, 0x30, 0x34, 0x37, 0x45, 0x30, 0x30, 0x43, 0x30, 0x30, 0x30, 0x30, 0x34, 0x43, 0x46, 0x46, 0x43, 0x45, 0x46, 0x0D, 0x0A};
const byte D126x2l[] PROGMEM =  {0x00, 0x3A, 0x30, 0x30, 0x37, 0x45, 0x30, 0x30, 0x34, 0x35, 0x33, 0x44, 0x0D, 0x0A, 0x00, 0x3A, 0x30, 0x30, 0x37, 0x45, 0x30, 0x30, 0x41, 0x30, 0x45, 0x32, 0x0D, 0x0A, 0x00, 0x3A, 0x30, 0x34, 0x37, 0x45, 0x30, 0x30, 0x43, 0x30, 0x30, 0x30, 0x30, 0x34, 0x43, 0x46, 0x46, 0x43, 0x45, 0x46, 0x0D, 0x0A};
const byte D127x1u[] PROGMEM =  {0x00, 0x3A, 0x30, 0x30, 0x37, 0x46, 0x30, 0x30, 0x34, 0x32, 0x33, 0x46, 0x0D, 0x0A, 0x00, 0x3A, 0x30, 0x30, 0x37, 0x46, 0x30, 0x30, 0x41, 0x30, 0x45, 0x31, 0x0D, 0x0A, 0x00, 0x3A, 0x30, 0x34, 0x37, 0x46, 0x30, 0x30, 0x43, 0x30, 0x30, 0x30, 0x30, 0x34, 0x43, 0x46, 0x46, 0x43, 0x45, 0x45, 0x0D, 0x0A};
const byte D127x1l[] PROGMEM =  {0x00, 0x3A, 0x30, 0x30, 0x37, 0x46, 0x30, 0x30, 0x34, 0x31, 0x34, 0x30, 0x0D, 0x0A, 0x00, 0x3A, 0x30, 0x30, 0x37, 0x46, 0x30, 0x30, 0x41, 0x30, 0x45, 0x31, 0x0D, 0x0A, 0x00, 0x3A, 0x30, 0x34, 0x37, 0x46, 0x30, 0x30, 0x43, 0x30, 0x30, 0x30, 0x30, 0x34, 0x43, 0x46, 0x46, 0x43, 0x45, 0x45, 0x0D, 0x0A};
const byte D127x2u[] PROGMEM =  {0x00, 0x3A, 0x30, 0x30, 0x37, 0x46, 0x30, 0x30, 0x34, 0x36, 0x33, 0x42, 0x0D, 0x0A, 0x00, 0x3A, 0x30, 0x30, 0x37, 0x46, 0x30, 0x30, 0x41, 0x30, 0x45, 0x31, 0x0D, 0x0A, 0x00, 0x3A, 0x30, 0x34, 0x37, 0x46, 0x30, 0x30, 0x43, 0x30, 0x30, 0x30, 0x30, 0x34, 0x43, 0x46, 0x46, 0x43, 0x45, 0x45, 0x0D, 0x0A};
const byte D127x2l[] PROGMEM =  {0x00, 0x3A, 0x30, 0x30, 0x37, 0x46, 0x30, 0x30, 0x34, 0x35, 0x33, 0x43, 0x0D, 0x0A, 0x00, 0x3A, 0x30, 0x30, 0x37, 0x46, 0x30, 0x30, 0x41, 0x30, 0x45, 0x31, 0x0D, 0x0A, 0x00, 0x3A, 0x30, 0x34, 0x37, 0x46, 0x30, 0x30, 0x43, 0x30, 0x30, 0x30, 0x30, 0x34, 0x43, 0x46, 0x46, 0x43, 0x45, 0x45, 0x0D, 0x0A};
const byte D130x1u[] PROGMEM =  {0x00, 0x3A, 0x30, 0x30, 0x38, 0x32, 0x30, 0x30, 0x34, 0x36, 0x33, 0x38, 0x0D, 0x0A, 0x00, 0x3A, 0x30, 0x30, 0x38, 0x32, 0x30, 0x30, 0x34, 0x32, 0x33, 0x43, 0x0D, 0x0A, 0x00, 0x3A, 0x30, 0x30, 0x38, 0x32, 0x30, 0x30, 0x41, 0x30, 0x44, 0x45, 0x0D, 0x0A};
const byte D130x1l[] PROGMEM =  {0x00, 0x3A, 0x30, 0x30, 0x38, 0x32, 0x30, 0x30, 0x34, 0x35, 0x33, 0x39, 0x0D, 0x0A, 0x00, 0x3A, 0x30, 0x30, 0x38, 0x32, 0x30, 0x30, 0x34, 0x31, 0x33, 0x44, 0x0D, 0x0A, 0x00, 0x3A, 0x30, 0x30, 0x38, 0x32, 0x30, 0x30, 0x41, 0x30, 0x44, 0x45, 0x0D, 0x0A};
const byte D131x1u[] PROGMEM =  {0x00, 0x3A, 0x30, 0x30, 0x38, 0x33, 0x30, 0x30, 0x34, 0x36, 0x33, 0x37, 0x0D, 0x0A, 0x00, 0x3A, 0x30, 0x30, 0x38, 0x33, 0x30, 0x30, 0x34, 0x32, 0x33, 0x42, 0x0D, 0x0A, 0x00, 0x3A, 0x30, 0x30, 0x38, 0x33, 0x30, 0x30, 0x41, 0x30, 0x44, 0x44, 0x0D, 0x0A};
const byte D131x1l[] PROGMEM =  {0x00, 0x3A, 0x30, 0x30, 0x38, 0x33, 0x30, 0x30, 0x34, 0x35, 0x33, 0x38, 0x0D, 0x0A, 0x00, 0x3A, 0x30, 0x30, 0x38, 0x33, 0x30, 0x30, 0x34, 0x31, 0x33, 0x43, 0x0D, 0x0A, 0x00, 0x3A, 0x30, 0x30, 0x38, 0x33, 0x30, 0x30, 0x41, 0x30, 0x44, 0x44, 0x0D, 0x0A};
const byte D132x2u[] PROGMEM =  {0x00, 0x3A, 0x30, 0x30, 0x38, 0x34, 0x30, 0x30, 0x34, 0x36, 0x33, 0x36, 0x0D, 0x0A, 0x00, 0x3A, 0x30, 0x30, 0x38, 0x34, 0x30, 0x30, 0x41, 0x30, 0x44, 0x43, 0x0D, 0x0A, 0x00, 0x3A, 0x30, 0x34, 0x38, 0x34, 0x30, 0x30, 0x43, 0x30, 0x30, 0x30, 0x30, 0x34, 0x43, 0x46, 0x46, 0x43, 0x45, 0x39, 0x0D, 0x0A};
const byte D132x2l[] PROGMEM =  {0x00, 0x3A, 0x30, 0x30, 0x38, 0x34, 0x30, 0x30, 0x34, 0x35, 0x33, 0x37, 0x0D, 0x0A, 0x00, 0x3A, 0x30, 0x30, 0x38, 0x34, 0x30, 0x30, 0x41, 0x30, 0x44, 0x43, 0x0D, 0x0A, 0x00, 0x3A, 0x30, 0x34, 0x38, 0x34, 0x30, 0x30, 0x43, 0x30, 0x30, 0x30, 0x30, 0x34, 0x43, 0x46, 0x46, 0x43, 0x45, 0x39, 0x0D, 0x0A};

int S;
int k;
int u;
unsigned int D;


void setup() {
  pinMode(13, OUTPUT);    //LED indikatorius zalias
  pinMode(12, OUTPUT);    //LED indikatorius raudonas
  pinMode(2, INPUT);      //evakuacija start
  Serial.begin(9600);
  wdt_enable(WDTO_8S);
}
void loop() {
  S = 0;
  delay(700);
  digitalWrite(13, HIGH);
  delay(700);
  digitalWrite(13, LOW);
  wdt_reset();
  if (digitalRead(2) == HIGH)                                                               // jei 2 high - atrakinam
  {
    digitalWrite(12, HIGH);
    delay(1500);
    if (S < 1) {
      for (k = 0; k < 42; k++) {                  //
        D = pgm_read_byte(D032x1l + k);            //32.1 duru uzrakinimas
        Serial.write(D);                          //
      }
      delay(40);
      for (k = 0; k < 42; k++) {                   //
        D = pgm_read_byte(D033x1l + k);            //33.1 duru uzrakinimas
        Serial.write(D);                          //
      }
      delay(40);
      for (k = 0; k < 42; k++) {                  //
        D = pgm_read_byte(D040x1l + k);            //40.1 duru uzrakinimas
        Serial.write(D);                          //
      }
      delay(40);
      for (k = 0; k < 50; k++) {                   //
        D = pgm_read_byte(D055x1l + k);            //55.1 duru uzrakinimas
        Serial.write(D);                          //
      }
      delay(40);
      for (k = 0; k < 50; k++) {                  //
        D = pgm_read_byte(D055x2l + k);            //55.2 duru uzrakinimas
        Serial.write(D);                          //
      }
      delay(40);
      for (k = 0; k < 50; k++) {                   //
        D = pgm_read_byte(D059x1l + k);            //59.1 duru uzrakinimas
        Serial.write(D);                          //
      }
      delay(40);
      for (k = 0; k < 50; k++) {                  //
        D = pgm_read_byte(D059x2l + k);            //59.2 duru uzrakinimas
        Serial.write(D);                          //
      }
      delay(40);
      for (k = 0; k < 50; k++) {                   //
        D = pgm_read_byte(D062x2l + k);            //62.2 duru uzrakinimas
        Serial.write(D);                          //
      }
      delay(40);
      for (k = 0; k < 50; k++) {                  //
        D = pgm_read_byte(D063x1l + k);            //63.1 duru uzrakinimas
        Serial.write(D);                          //
      }
      delay(40);
      for (k = 0; k < 50; k++) {                   //
        D = pgm_read_byte(D063x2l + k);            //63.2 duru uzrakinimas
        Serial.write(D);                          //
      }
      delay(40);
      for (k = 0; k < 50; k++) {                  //
        D = pgm_read_byte(D067x1l + k);            //67.1 duru uzrakinimas
        Serial.write(D);                          //
      }
      delay(40);
      for (k = 0; k < 50; k++) {                   //
        D = pgm_read_byte(D067x2l + k);            //67.2 duru uzrakinimas
        Serial.write(D);                          //
      }
      delay(40);
      for (k = 0; k < 42; k++) {                  //
        D = pgm_read_byte(D088x1l + k);            //88.1 duru uzrakinimas
        Serial.write(D);                          //
      }
      delay(40);
      for (k = 0; k < 42; k++) {                   //
        D = pgm_read_byte(D089x1l + k);            //89.1 duru uzrakinimas
        Serial.write(D);                          //
      }
      delay(40);
      for (k = 0; k < 42; k++) {                  //
        D = pgm_read_byte(D091x1l + k);            // 91.1 duru uzrakinimas
        Serial.write(D);                          //
      }
      delay(40);
      for (k = 0; k < 50; k++) {                   //
        D = pgm_read_byte(D096x1l + k);            // 96.1 duru uzrakinimas
        Serial.write(D);                          //
      }
      delay(40);
      for (k = 0; k < 50; k++) {                   //
        D = pgm_read_byte(D096x2l + k);            // 96.2 duru uzrakinimas
        Serial.write(D);                          //
      }
      delay(40);
      for (k = 0; k < 50; k++) {                  //
        D = pgm_read_byte(D099x1l + k);            // 99.1 duru uzrakinimas
        Serial.write(D);                          //
      }
      delay(40);
      for (k = 0; k < 50; k++) {                   //
        D = pgm_read_byte(D099x2l + k);            // 99.2 duru uzrakinimas
        Serial.write(D);                          //
      }
      delay(40);
      for (k = 0; k < 50; k++) {                  //
        D = pgm_read_byte(D100x1l + k);            // 100.1 duru uzrakinimas
        Serial.write(D);                          //
      }
      delay(40);
      for (k = 0; k < 50; k++) {                   //
        D = pgm_read_byte(D100x2l + k);            // 100.2 duru uzrakinimas
        Serial.write(D);                          //
      }
      delay(40);
      for (k = 0; k < 50; k++) {                  //
        D = pgm_read_byte(D104x1l + k);            // 104.1 duru uzrakinimas
        Serial.write(D);                          //
      }
      delay(40);
      for (k = 0; k < 50; k++) {                   //
        D = pgm_read_byte(D104x2l + k);            // 104.2 duru uzrakinimas
        Serial.write(D);                          //
      }
      delay(40);
      for (k = 0; k < 50; k++) {                  //
        D = pgm_read_byte(D105x1l + k);            //105.1 duru uzrakinimas
        Serial.write(D);                          //
      }
      delay(40);
      for (k = 0; k < 50; k++) {                   //
        D = pgm_read_byte(D105x2l + k);            //105.2 duru uzrakinimas
        Serial.write(D);                          //
      }
      delay(40);
      for (k = 0; k < 42; k++) {                  //
        D = pgm_read_byte(D115x1l + k);            // 115.1 duru uzrakinimas
        Serial.write(D);                          //
      }
      delay(40);
      for (k = 0; k < 42; k++) {                   //
        D = pgm_read_byte(D117x1l + k);            //117.1 duru uzrakinimas
        Serial.write(D);                          //
      }
      delay(40);
      for (k = 0; k < 42; k++) {                  //
        D = pgm_read_byte(D118x1l + k);            //118.1 duru uzrakinimas
        Serial.write(D);                          //
      }
      delay(40);
      for (k = 0; k < 42; k++) {                   //
        D = pgm_read_byte(D122x1l + k);            //122.1 duru uzrakinimas
        Serial.write(D);                          //
      }
      delay(40);
      for (k = 0; k < 50; k++) {                  //
        D = pgm_read_byte(D126x1l + k);            //126.1 duru uzrakinimas
        Serial.write(D);                          //
      }
      delay(40);
      for (k = 0; k < 50; k++) {                   //
        D = pgm_read_byte(D126x2l + k);            //126.2 duru uzrakinimas
        Serial.write(D);                          //
      }
      delay(40);
      for (k = 0; k < 50; k++) {                  //
        D = pgm_read_byte(D127x1l + k);            //127.1 duru uzrakinimas
        Serial.write(D);                          //
      }
      delay(40);
      for (k = 0; k < 50; k++) {                   //
        D = pgm_read_byte(D127x2l + k);            //127.2 duru uzrakinimas
        Serial.write(D);                          //
      }
      delay(40);
      for (k = 0; k < 42; k++) {                   //
        D = pgm_read_byte(D130x1l + k);            //130.1 duru uzrakinimas
        Serial.write(D);                          //
      }
      delay(40);
      for (k = 0; k < 42; k++) {                   //
        D = pgm_read_byte(D131x1l + k);            //131.1 duru uzrakinimas
        Serial.write(D);                          //
      }
      delay(40);
      for (k = 0; k < 50; k++) {                   //
        D = pgm_read_byte(D132x2l + k);            //132.2 duru uzrakinimas
        Serial.write(D);                          //
      }
      digitalWrite(12, LOW);
      wdt_reset();
      S = S++;
    }
atrakinam:
    delay(700);
    digitalWrite(12, HIGH);
    for (k = 0; k < 42; k++) {                  //
      D = pgm_read_byte(D032x1u + k);            //32.1 duru atrakinimas
      Serial.write(D);                          //
    }
    delay(40);
    for (k = 0; k < 42; k++) {                   //
      D = pgm_read_byte(D033x1u + k);            //33.1 duru atrakinimas
      Serial.write(D);                          //
    }
    delay(40);
    for (k = 0; k < 42; k++) {                  //
      D = pgm_read_byte(D040x1u + k);            //40.1 duru atrakinimas
      Serial.write(D);                          //
    }
    delay(40);
    for (k = 0; k < 50; k++) {                   //
      D = pgm_read_byte(D055x1u + k);            //55.1 duru atrakinimas
      Serial.write(D);                          //
    }
    delay(40);
    for (k = 0; k < 50; k++) {                  //
      D = pgm_read_byte(D055x2u + k);            //55.2 duru atrakinimas
      Serial.write(D);                          //
    }
    delay(40);
    for (k = 0; k < 50; k++) {                   //
      D = pgm_read_byte(D059x1u + k);            //59.1 duru atrakinimas
      Serial.write(D);                          //
    }
    delay(40);
    for (k = 0; k < 50; k++) {                  //
      D = pgm_read_byte(D059x2u + k);            //59.2 duru atrakinimas
      Serial.write(D);                          //
    }
    delay(40);
    for (k = 0; k < 50; k++) {                   //
      D = pgm_read_byte(D062x2u + k);            //62.2 duru atrakinimas
      Serial.write(D);                          //
    }
    delay(40);
    for (k = 0; k < 50; k++) {                  //
      D = pgm_read_byte(D063x1u + k);            //63.1 duru atrakinimas
      Serial.write(D);                          //
    }
    delay(40);
    for (k = 0; k < 50; k++) {                   //
      D = pgm_read_byte(D063x2u + k);            //63.2 duru atrakinimas
      Serial.write(D);                          //
    }
    delay(40);
    for (k = 0; k < 50; k++) {                  //
      D = pgm_read_byte(D067x1u + k);            //67.1 duru atrakinimas
      Serial.write(D);                          //
    }
    delay(40);
    for (k = 0; k < 50; k++) {                   //
      D = pgm_read_byte(D067x2u + k);            //67.2 duru atrakinimas
      Serial.write(D);                          //
    }
    delay(40);
    for (k = 0; k < 42; k++) {                  //
      D = pgm_read_byte(D088x1u + k);            //88.1 duru atrakinimas
      Serial.write(D);                          //
    }
    delay(40);
    for (k = 0; k < 42; k++) {                   //
      D = pgm_read_byte(D089x1u + k);            //89.1 duru atrakinimas
      Serial.write(D);                          //
    }
    delay(40);
    for (k = 0; k < 42; k++) {                  //
      D = pgm_read_byte(D091x1u + k);            // 91.1 duru atrakinimas
      Serial.write(D);                          //
    }
    delay(40);
    for (k = 0; k < 50; k++) {                   //
      D = pgm_read_byte(D096x1u + k);            // 96.1 duru atrakinimas
      Serial.write(D);                          //
    }
    delay(40);
    for (k = 0; k < 50; k++) {                   //
      D = pgm_read_byte(D096x2u + k);            // 96.2 duru atrakinimas
      Serial.write(D);                          //
    }
    delay(40);
    for (k = 0; k < 50; k++) {                  //
      D = pgm_read_byte(D099x1u + k);            // 99.1 duru atrakinimas
      Serial.write(D);                          //
    }
    delay(40);
    for (k = 0; k < 50; k++) {                   //
      D = pgm_read_byte(D099x2u + k);            // 99.2 duru atrakinimas
      Serial.write(D);                          //
    }
    delay(40);
    for (k = 0; k < 50; k++) {                  //
      D = pgm_read_byte(D100x1u + k);            // 100.1 duru atrakinimas
      Serial.write(D);                          //
    }
    delay(40);
    for (k = 0; k < 50; k++) {                   //
      D = pgm_read_byte(D100x2u + k);            // 100.2 duru atrakinimas
      Serial.write(D);                          //
    }
    delay(40);
    for (k = 0; k < 50; k++) {                  //
      D = pgm_read_byte(D104x1u + k);            // 104.1 duru atrakinimas
      Serial.write(D);                          //
    }
    delay(40);
    for (k = 0; k < 50; k++) {                   //
      D = pgm_read_byte(D104x2u + k);            // 104.2 duru atrakinimas
      Serial.write(D);                          //
    }
    delay(40);
    for (k = 0; k < 50; k++) {                  //
      D = pgm_read_byte(D105x1u + k);            //105.1 duru atrakinimas
      Serial.write(D);                          //
    }
    delay(40);
    for (k = 0; k < 50; k++) {                   //
      D = pgm_read_byte(D105x2u + k);            //105.2 duru atrakinimas
      Serial.write(D);                          //
    }
    delay(40);
    for (k = 0; k < 42; k++) {                  //
      D = pgm_read_byte(D115x1u + k);            // 115.1 duru atrakinimas
      Serial.write(D);                          //
    }
    delay(40);
    for (k = 0; k < 42; k++) {                   //
      D = pgm_read_byte(D117x1u + k);            //117.1 duru atrakinimas
      Serial.write(D);                          //
    }
    delay(40);
    for (k = 0; k < 42; k++) {                  //
      D = pgm_read_byte(D118x1u + k);            //118.1 duru atrakinimas
      Serial.write(D);                          //
    }
    delay(40);
    for (k = 0; k < 42; k++) {                   //
      D = pgm_read_byte(D122x1u + k);            //122.1 duru atrakinimas
      Serial.write(D);                          //
    }
    delay(40);
    for (k = 0; k < 50; k++) {                  //
      D = pgm_read_byte(D126x1u + k);            //126.1 duru atrakinimas
      Serial.write(D);                          //
    }
    delay(40);
    for (k = 0; k < 50; k++) {                   //
      D = pgm_read_byte(D126x2u + k);            //126.2 duru atrakinimas
      Serial.write(D);                          //
    }
    delay(40);
    for (k = 0; k < 50; k++) {                  //
      D = pgm_read_byte(D127x1u + k);            //127.1 duru atrakinimas
      Serial.write(D);                          //
    }
    delay(40);
    for (k = 0; k < 50; k++) {                   //
      D = pgm_read_byte(D127x2u + k);            //127.2 duru atrakinimas
      Serial.write(D);                          //
    }
    delay(40);
    for (k = 0; k < 42; k++) {                   //
      D = pgm_read_byte(D130x1u + k);            //130.1 duru atrakinimas
      Serial.write(D);                          //
    }
    delay(40);
    for (k = 0; k < 42; k++) {                   //
      D = pgm_read_byte(D131x1u + k);            //131.1 duru atrakinimas
      Serial.write(D);                          //
    }
    delay(40);
    for (k = 0; k < 50; k++) {                   //
      D = pgm_read_byte(D132x2u + k);            //132.2 duru atrakinimas
      Serial.write(D);                          //
    }
    wdt_reset();

uzrakinam:
    if (digitalRead(2) == LOW)                                                  // jei 2 low - uzrakinam


      for (u = 0; u < 6; u++) {
        for (k = 0; k < 42; k++) {                  //
          D = pgm_read_byte(D032x1l + k);            //32.1 duru uzrakinimas
          Serial.write(D);                          //
        }
        delay(40);
        for (k = 0; k < 42; k++) {                   //
          D = pgm_read_byte(D033x1l + k);            //33.1 duru uzrakinimas
          Serial.write(D);                          //
        }
        delay(40);
        for (k = 0; k < 42; k++) {                  //
          D = pgm_read_byte(D040x1l + k);            //40.1 duru uzrakinimas
          Serial.write(D);                          //
        }
        delay(40);
        for (k = 0; k < 50; k++) {                   //
          D = pgm_read_byte(D055x1l + k);            //55.1 duru uzrakinimas
          Serial.write(D);                          //
        }
        delay(40);
        for (k = 0; k < 50; k++) {                  //
          D = pgm_read_byte(D055x2l + k);            //55.2 duru uzrakinimas
          Serial.write(D);                          //
        }
        delay(40);
        for (k = 0; k < 50; k++) {                   //
          D = pgm_read_byte(D059x1l + k);            //59.1 duru uzrakinimas
          Serial.write(D);                          //
        }
        delay(40);
        for (k = 0; k < 50; k++) {                  //
          D = pgm_read_byte(D059x2l + k);            //59.2 duru uzrakinimas
          Serial.write(D);                          //
        }
        delay(40);
        for (k = 0; k < 50; k++) {                   //
          D = pgm_read_byte(D062x2l + k);            //62.2 duru uzrakinimas
          Serial.write(D);                          //
        }
        delay(40);
        for (k = 0; k < 50; k++) {                  //
          D = pgm_read_byte(D063x1l + k);            //63.1 duru uzrakinimas
          Serial.write(D);                          //
        }
        delay(40);
        for (k = 0; k < 50; k++) {                   //
          D = pgm_read_byte(D063x2l + k);            //63.2 duru uzrakinimas
          Serial.write(D);                          //
        }
        delay(40);
        for (k = 0; k < 50; k++) {                  //
          D = pgm_read_byte(D067x1l + k);            //67.1 duru uzrakinimas
          Serial.write(D);                          //
        }
        delay(40);
        for (k = 0; k < 50; k++) {                   //
          D = pgm_read_byte(D067x2l + k);            //67.2 duru uzrakinimas
          Serial.write(D);                          //
        }
        delay(40);
        for (k = 0; k < 42; k++) {                  //
          D = pgm_read_byte(D088x1l + k);            //88.1 duru uzrakinimas
          Serial.write(D);                          //
        }
        delay(40);
        for (k = 0; k < 42; k++) {                   //
          D = pgm_read_byte(D089x1l + k);            //89.1 duru uzrakinimas
          Serial.write(D);                          //
        }
        delay(40);
        for (k = 0; k < 42; k++) {                  //
          D = pgm_read_byte(D091x1l + k);            // 91.1 duru uzrakinimas
          Serial.write(D);                          //
        }
        delay(40);
        for (k = 0; k < 50; k++) {                   //
          D = pgm_read_byte(D096x1l + k);            // 96.1 duru uzrakinimas
          Serial.write(D);                          //
        }
        delay(40);
        for (k = 0; k < 50; k++) {                   //
          D = pgm_read_byte(D096x2l + k);            // 96.2 duru uzrakinimas
          Serial.write(D);                          //
        }
        delay(40);
        for (k = 0; k < 50; k++) {                  //
          D = pgm_read_byte(D099x1l + k);            // 99.1 duru uzrakinimas
          Serial.write(D);                          //
        }
        delay(40);
        for (k = 0; k < 50; k++) {                   //
          D = pgm_read_byte(D099x2l + k);            // 99.2 duru uzrakinimas
          Serial.write(D);                          //
        }
        delay(40);
        for (k = 0; k < 50; k++) {                  //
          D = pgm_read_byte(D100x1l + k);            // 100.1 duru uzrakinimas
          Serial.write(D);                          //
        }
        delay(40);
        for (k = 0; k < 50; k++) {                   //
          D = pgm_read_byte(D100x2l + k);            // 100.2 duru uzrakinimas
          Serial.write(D);                          //
        }
        delay(40);
        for (k = 0; k < 50; k++) {                  //
          D = pgm_read_byte(D104x1l + k);            // 104.1 duru uzrakinimas
          Serial.write(D);                          //
        }
        delay(40);
        for (k = 0; k < 50; k++) {                   //
          D = pgm_read_byte(D104x2l + k);            // 104.2 duru uzrakinimas
          Serial.write(D);                          //
        }
        delay(40);
        for (k = 0; k < 50; k++) {                  //
          D = pgm_read_byte(D105x1l + k);            //105.1 duru uzrakinimas
          Serial.write(D);                          //
        }
        delay(40);
        for (k = 0; k < 50; k++) {                   //
          D = pgm_read_byte(D105x2l + k);            //105.2 duru uzrakinimas
          Serial.write(D);                          //
        }
        delay(40);
        for (k = 0; k < 42; k++) {                  //
          D = pgm_read_byte(D115x1l + k);            // 115.1 duru uzrakinimas
          Serial.write(D);                          //
        }
        delay(40);
        for (k = 0; k < 42; k++) {                   //
          D = pgm_read_byte(D117x1l + k);            //117.1 duru uzrakinimas
          Serial.write(D);                          //
        }
        delay(40);
        for (k = 0; k < 42; k++) {                  //
          D = pgm_read_byte(D118x1l + k);            //118.1 duru uzrakinimas
          Serial.write(D);                          //
        }
        delay(40);
        for (k = 0; k < 42; k++) {                   //
          D = pgm_read_byte(D122x1l + k);            //122.1 duru uzrakinimas
          Serial.write(D);                          //
        }
        delay(40);
        for (k = 0; k < 50; k++) {                  //
          D = pgm_read_byte(D126x1l + k);            //126.1 duru uzrakinimas
          Serial.write(D);                          //
        }
        delay(40);
        for (k = 0; k < 50; k++) {                   //
          D = pgm_read_byte(D126x2l + k);            //126.2 duru uzrakinimas
          Serial.write(D);                          //
        }
        delay(40);
        for (k = 0; k < 50; k++) {                  //
          D = pgm_read_byte(D127x1l + k);            //127.1 duru uzrakinimas
          Serial.write(D);                          //
        }
        delay(40);
        for (k = 0; k < 50; k++) {                   //
          D = pgm_read_byte(D127x2l + k);            //127.2 duru uzrakinimas
          Serial.write(D);                          //
        }
        delay(40);
        for (k = 0; k < 42; k++) {                   //
          D = pgm_read_byte(D130x1l + k);            //130.1 duru uzrakinimas
          Serial.write(D);                          //
        }
        delay(40);
        for (k = 0; k < 42; k++) {                   //
          D = pgm_read_byte(D131x1l + k);            //131.1 duru uzrakinimas
          Serial.write(D);                          //
        }
        delay(40);
        for (k = 0; k < 50; k++) {                   //
          D = pgm_read_byte(D132x2l + k);            //132.2 duru uzrakinimas
          Serial.write(D);                          //
        }
        wdt_reset();
        delay(200);
        u = u++;
      }
    if (digitalRead(2) == HIGH)
    {
      goto atrakinam;
    }

    digitalWrite(12, LOW);
  }
}
