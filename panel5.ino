#include <avr/pgmspace.h>
#include <avr/wdt.h>

const byte D069x1u[] PROGMEM =  {0x00, 0x3A, 0x30, 0x30, 0x34, 0x35, 0x30, 0x30, 0x34, 0x32, 0x37, 0x39, 0x0D, 0x0A, 0x00, 0x3A, 0x30, 0x30, 0x34, 0x35, 0x30, 0x30, 0x41, 0x30, 0x31, 0x42, 0x0D, 0x0A, 0x00, 0x3A, 0x30, 0x34, 0x34, 0x35, 0x30, 0x30, 0x43, 0x30, 0x30, 0x30, 0x30, 0x34, 0x43, 0x46, 0x46, 0x43, 0x32, 0x38, 0x0D, 0x0A};
const byte D069x1l[] PROGMEM =  {0x00, 0x3A, 0x30, 0x30, 0x34, 0x35, 0x30, 0x30, 0x34, 0x31, 0x37, 0x41, 0x0D, 0x0A, 0x00, 0x3A, 0x30, 0x30, 0x34, 0x35, 0x30, 0x30, 0x41, 0x30, 0x31, 0x42, 0x0D, 0x0A, 0x00, 0x3A, 0x30, 0x34, 0x34, 0x35, 0x30, 0x30, 0x43, 0x30, 0x30, 0x30, 0x30, 0x34, 0x43, 0x46, 0x46, 0x43, 0x32, 0x38, 0x0D, 0x0A};
const byte D069x2u[] PROGMEM =  {0x00, 0x3A, 0x30, 0x30, 0x34, 0x35, 0x30, 0x30, 0x34, 0x36, 0x37, 0x35, 0x0D, 0x0A, 0x00, 0x3A, 0x30, 0x30, 0x34, 0x35, 0x30, 0x30, 0x41, 0x30, 0x31, 0x42, 0x0D, 0x0A, 0x00, 0x3A, 0x30, 0x34, 0x34, 0x35, 0x30, 0x30, 0x43, 0x30, 0x30, 0x30, 0x30, 0x34, 0x43, 0x46, 0x46, 0x43, 0x32, 0x38, 0x0D, 0x0A};
const byte D069x2l[] PROGMEM =  {0x00, 0x3A, 0x30, 0x30, 0x34, 0x35, 0x30, 0x30, 0x34, 0x35, 0x37, 0x36, 0x0D, 0x0A, 0x00, 0x3A, 0x30, 0x30, 0x34, 0x35, 0x30, 0x30, 0x41, 0x30, 0x31, 0x42, 0x0D, 0x0A, 0x00, 0x3A, 0x30, 0x34, 0x34, 0x35, 0x30, 0x30, 0x43, 0x30, 0x30, 0x30, 0x30, 0x34, 0x43, 0x46, 0x46, 0x43, 0x32, 0x38, 0x0D, 0x0A};
const byte D070x1u[] PROGMEM =  {0x00, 0x3A, 0x30, 0x30, 0x34, 0x36, 0x30, 0x30, 0x34, 0x32, 0x37, 0x38, 0x0D, 0x0A, 0x00, 0x3A, 0x30, 0x30, 0x34, 0x36, 0x30, 0x30, 0x41, 0x30, 0x31, 0x41, 0x0D, 0x0A, 0x00, 0x3A, 0x30, 0x34, 0x34, 0x36, 0x30, 0x30, 0x43, 0x30, 0x30, 0x30, 0x30, 0x34, 0x43, 0x46, 0x46, 0x43, 0x32, 0x37, 0x0D, 0x0A};
const byte D070x1l[] PROGMEM =  {0x00, 0x3A, 0x30, 0x30, 0x34, 0x36, 0x30, 0x30, 0x34, 0x31, 0x37, 0x39, 0x0D, 0x0A, 0x00, 0x3A, 0x30, 0x30, 0x34, 0x36, 0x30, 0x30, 0x41, 0x30, 0x31, 0x41, 0x0D, 0x0A, 0x00, 0x3A, 0x30, 0x34, 0x34, 0x36, 0x30, 0x30, 0x43, 0x30, 0x30, 0x30, 0x30, 0x34, 0x43, 0x46, 0x46, 0x43, 0x32, 0x37, 0x0D, 0x0A};
const byte D070x2u[] PROGMEM =  {0x00, 0x3A, 0x30, 0x30, 0x34, 0x36, 0x30, 0x30, 0x34, 0x36, 0x37, 0x34, 0x0D, 0x0A, 0x00, 0x3A, 0x30, 0x30, 0x34, 0x36, 0x30, 0x30, 0x41, 0x30, 0x31, 0x41, 0x0D, 0x0A, 0x00, 0x3A, 0x30, 0x34, 0x34, 0x36, 0x30, 0x30, 0x43, 0x30, 0x30, 0x30, 0x30, 0x34, 0x43, 0x46, 0x46, 0x43, 0x32, 0x37, 0x0D, 0x0A};
const byte D070x2l[] PROGMEM =  {0x00, 0x3A, 0x30, 0x30, 0x34, 0x36, 0x30, 0x30, 0x34, 0x35, 0x37, 0x35, 0x0D, 0x0A, 0x0A, 0x0A, 0x3A, 0x30, 0x30, 0x34, 0x36, 0x30, 0x30, 0x41, 0x30, 0x31, 0x41, 0x0D, 0x00, 0x3A, 0x30, 0x34, 0x34, 0x36, 0x30, 0x30, 0x43, 0x30, 0x30, 0x30, 0x30, 0x34, 0x43, 0x46, 0x46, 0x43, 0x32, 0x37, 0x0D, 0x0A};
const byte D071x1u[] PROGMEM =  {0x00, 0x3A, 0x30, 0x30, 0x34, 0x37, 0x30, 0x30, 0x34, 0x32, 0x37, 0x37, 0x0D, 0x0A, 0x00, 0x3A, 0x30, 0x30, 0x34, 0x37, 0x30, 0x30, 0x41, 0x30, 0x31, 0x39, 0x0D, 0x0A, 0x00, 0x3A, 0x30, 0x34, 0x34, 0x37, 0x30, 0x30, 0x43, 0x30, 0x30, 0x30, 0x30, 0x34, 0x43, 0x46, 0x46, 0x43, 0x32, 0x36, 0x0D, 0x0A};
const byte D071x1l[] PROGMEM =  {0x00, 0x3A, 0x30, 0x30, 0x34, 0x37, 0x30, 0x30, 0x34, 0x31, 0x37, 0x38, 0x0D, 0x0A, 0x00, 0x3A, 0x30, 0x30, 0x34, 0x37, 0x30, 0x30, 0x41, 0x30, 0x31, 0x39, 0x0D, 0x0A, 0x00, 0x3A, 0x30, 0x34, 0x34, 0x37, 0x30, 0x30, 0x43, 0x30, 0x30, 0x30, 0x30, 0x34, 0x43, 0x46, 0x46, 0x43, 0x32, 0x36, 0x0D, 0x0A};
const byte D071x2u[] PROGMEM =  {0x00, 0x3A, 0x30, 0x30, 0x34, 0x37, 0x30, 0x30, 0x34, 0x36, 0x37, 0x33, 0x0D, 0x0A, 0x00, 0x3A, 0x30, 0x30, 0x34, 0x37, 0x30, 0x30, 0x41, 0x30, 0x31, 0x39, 0x0D, 0x0A, 0x37, 0x30, 0x30, 0x43, 0x30, 0x30, 0x30, 0x30, 0x34, 0x43, 0x46, 0x46, 0x43, 0x32, 0x36, 0x37, 0x30, 0x30, 0x43, 0x30, 0x0D, 0x0A};
const byte D071x2l[] PROGMEM =  {0x00, 0x3A, 0x30, 0x30, 0x34, 0x37, 0x30, 0x30, 0x34, 0x35, 0x37, 0x34, 0x0D, 0x0A, 0x00, 0x3A, 0x30, 0x30, 0x34, 0x37, 0x30, 0x30, 0x41, 0x30, 0x31, 0x39, 0x0D, 0x0A, 0x00, 0x3A, 0x30, 0x34, 0x34, 0x37, 0x30, 0x30, 0x43, 0x30, 0x30, 0x30, 0x30, 0x34, 0x43, 0x46, 0x46, 0x43, 0x32, 0x36, 0x0D, 0x0A};
const byte D072x1u[] PROGMEM =  {0x00, 0x3A, 0x30, 0x30, 0x34, 0x38, 0x30, 0x30, 0x34, 0x32, 0x37, 0x36, 0x0D, 0x0A, 0x00, 0x3A, 0x30, 0x30, 0x34, 0x38, 0x30, 0x30, 0x41, 0x30, 0x31, 0x38, 0x0D, 0x0A, 0x00, 0x3A, 0x30, 0x34, 0x34, 0x38, 0x30, 0x30, 0x43, 0x30, 0x30, 0x30, 0x30, 0x34, 0x43, 0x46, 0x46, 0x43, 0x32, 0x35, 0x0D, 0x0A};
const byte D072x1l[] PROGMEM =  {0x00, 0x3A, 0x30, 0x30, 0x34, 0x38, 0x30, 0x30, 0x34, 0x31, 0x37, 0x37, 0x0D, 0x0A, 0x00, 0x3A, 0x30, 0x30, 0x34, 0x38, 0x30, 0x30, 0x41, 0x30, 0x31, 0x38, 0x0D, 0x0A, 0x00, 0x3A, 0x30, 0x34, 0x34, 0x38, 0x30, 0x30, 0x43, 0x30, 0x30, 0x30, 0x30, 0x34, 0x43, 0x46, 0x46, 0x43, 0x32, 0x35, 0x0D, 0x0A};
const byte D072x2u[] PROGMEM =  {0x00, 0x3A, 0x30, 0x30, 0x34, 0x38, 0x30, 0x30, 0x34, 0x36, 0x37, 0x32, 0x0D, 0x0A, 0x00, 0x3A, 0x30, 0x30, 0x34, 0x38, 0x30, 0x30, 0x41, 0x30, 0x31, 0x38, 0x0D, 0x0A, 0x00, 0x3A, 0x30, 0x34, 0x34, 0x38, 0x30, 0x30, 0x43, 0x30, 0x30, 0x30, 0x30, 0x34, 0x43, 0x46, 0x46, 0x43, 0x32, 0x35, 0x0D, 0x0A};
const byte D072x2l[] PROGMEM =  {0x00, 0x3A, 0x30, 0x30, 0x34, 0x38, 0x30, 0x30, 0x34, 0x35, 0x37, 0x33, 0x0D, 0x0A, 0x00, 0x3A, 0x30, 0x30, 0x34, 0x38, 0x30, 0x30, 0x41, 0x30, 0x31, 0x38, 0x0D, 0x0A, 0x00, 0x3A, 0x30, 0x34, 0x34, 0x38, 0x30, 0x30, 0x43, 0x30, 0x30, 0x30, 0x30, 0x34, 0x43, 0x46, 0x46, 0x43, 0x32, 0x35, 0x0D, 0x0A};
const byte D073x1u[] PROGMEM =  {0x00, 0x3A, 0x30, 0x30, 0x34, 0x39, 0x30, 0x30, 0x34, 0x32, 0x37, 0x35, 0x0D, 0x0A, 0x00, 0x3A, 0x30, 0x30, 0x34, 0x39, 0x30, 0x30, 0x41, 0x30, 0x31, 0x37, 0x0D, 0x0A, 0x00, 0x3A, 0x30, 0x34, 0x34, 0x39, 0x30, 0x30, 0x43, 0x30, 0x30, 0x30, 0x30, 0x34, 0x43, 0x46, 0x46, 0x43, 0x32, 0x34, 0x0D, 0x0A};
const byte D073x1l[] PROGMEM =  {0x00, 0x3A, 0x30, 0x30, 0x34, 0x39, 0x30, 0x30, 0x34, 0x31, 0x37, 0x36, 0x0D, 0x0A, 0x00, 0x3A, 0x30, 0x30, 0x34, 0x39, 0x30, 0x30, 0x41, 0x30, 0x31, 0x37, 0x0D, 0x0A, 0x00, 0x3A, 0x30, 0x34, 0x34, 0x39, 0x30, 0x30, 0x43, 0x30, 0x30, 0x30, 0x30, 0x34, 0x43, 0x46, 0x46, 0x43, 0x32, 0x34, 0x0D, 0x0A};
const byte D073x2u[] PROGMEM =  {0x00, 0x3A, 0x30, 0x30, 0x34, 0x39, 0x30, 0x30, 0x34, 0x36, 0x37, 0x31, 0x0D, 0x0A, 0x00, 0x3A, 0x30, 0x30, 0x34, 0x39, 0x30, 0x30, 0x41, 0x30, 0x31, 0x37, 0x0D, 0x0A, 0x00, 0x3A, 0x30, 0x34, 0x34, 0x39, 0x30, 0x30, 0x43, 0x30, 0x30, 0x30, 0x30, 0x34, 0x43, 0x46, 0x46, 0x43, 0x32, 0x34, 0x0D, 0x0A};
const byte D073x2l[] PROGMEM =  {0x00, 0x3A, 0x30, 0x30, 0x34, 0x39, 0x30, 0x30, 0x34, 0x35, 0x37, 0x32, 0x0D, 0x0A, 0x00, 0x3A, 0x30, 0x30, 0x34, 0x39, 0x30, 0x30, 0x41, 0x30, 0x31, 0x37, 0x0D, 0x0A, 0x00, 0x3A, 0x30, 0x34, 0x34, 0x39, 0x30, 0x30, 0x43, 0x30, 0x30, 0x30, 0x30, 0x34, 0x43, 0x46, 0x46, 0x43, 0x32, 0x34, 0x0D, 0x0A};
const byte D076x1u[] PROGMEM =  {0x00, 0x3A, 0x30, 0x30, 0x34, 0x43, 0x30, 0x30, 0x34, 0x32, 0x37, 0x32, 0x0D, 0x0A, 0x00, 0x3A, 0x30, 0x30, 0x34, 0x43, 0x30, 0x30, 0x41, 0x30, 0x31, 0x34, 0x0D, 0x0A, 0x00, 0x3A, 0x30, 0x34, 0x34, 0x43, 0x30, 0x30, 0x43, 0x30, 0x30, 0x30, 0x30, 0x34, 0x43, 0x46, 0x46, 0x43, 0x32, 0x31, 0x0D, 0x0A};
const byte D076x1l[] PROGMEM =  {0x00, 0x3A, 0x30, 0x30, 0x34, 0x43, 0x30, 0x30, 0x34, 0x31, 0x37, 0x33, 0x0D, 0x0A, 0x00, 0x3A, 0x30, 0x30, 0x34, 0x43, 0x30, 0x30, 0x41, 0x30, 0x31, 0x34, 0x0D, 0x0A, 0x00, 0x3A, 0x30, 0x34, 0x34, 0x43, 0x30, 0x30, 0x43, 0x30, 0x30, 0x30, 0x30, 0x34, 0x43, 0x46, 0x46, 0x43, 0x32, 0x31, 0x0D, 0x0A};
const byte D076x2u[] PROGMEM =  {0x00, 0x3A, 0x30, 0x30, 0x34, 0x43, 0x30, 0x30, 0x34, 0x36, 0x36, 0x45, 0x0D, 0x0A, 0x00, 0x3A, 0x30, 0x30, 0x34, 0x43, 0x30, 0x30, 0x41, 0x30, 0x31, 0x34, 0x0D, 0x0A, 0x00, 0x3A, 0x30, 0x34, 0x34, 0x43, 0x30, 0x30, 0x43, 0x30, 0x30, 0x30, 0x30, 0x34, 0x43, 0x46, 0x46, 0x43, 0x32, 0x31, 0x0D, 0x0A};
const byte D076x2l[] PROGMEM =  {0x00, 0x3A, 0x30, 0x30, 0x34, 0x43, 0x30, 0x30, 0x34, 0x35, 0x36, 0x46, 0x0D, 0x0A, 0x00, 0x3A, 0x30, 0x30, 0x34, 0x43, 0x30, 0x30, 0x41, 0x30, 0x31, 0x34, 0x0D, 0x0A, 0x00, 0x3A, 0x30, 0x34, 0x34, 0x43, 0x30, 0x30, 0x43, 0x30, 0x30, 0x30, 0x30, 0x34, 0x43, 0x46, 0x46, 0x43, 0x32, 0x31, 0x0D, 0x0A};
const byte D077x1u[] PROGMEM =  {0x00, 0x3A, 0x30, 0x30, 0x34, 0x44, 0x30, 0x30, 0x34, 0x32, 0x37, 0x31, 0x0D, 0x0A, 0x00, 0x3A, 0x30, 0x30, 0x34, 0x44, 0x30, 0x30, 0x41, 0x30, 0x31, 0x33, 0x0D, 0x0A, 0x00, 0x3A, 0x30, 0x34, 0x34, 0x44, 0x30, 0x30, 0x43, 0x30, 0x30, 0x30, 0x30, 0x34, 0x43, 0x46, 0x46, 0x43, 0x32, 0x30, 0x0D, 0x0A};
const byte D077x1l[] PROGMEM =  {0x00, 0x3A, 0x30, 0x30, 0x34, 0x44, 0x30, 0x30, 0x34, 0x31, 0x37, 0x32, 0x0D, 0x0A, 0x00, 0x3A, 0x30, 0x30, 0x34, 0x44, 0x30, 0x30, 0x41, 0x30, 0x31, 0x33, 0x0D, 0x0A, 0x00, 0x3A, 0x30, 0x34, 0x34, 0x44, 0x30, 0x30, 0x43, 0x30, 0x30, 0x30, 0x30, 0x34, 0x43, 0x46, 0x46, 0x43, 0x32, 0x30, 0x0D, 0x0A};
const byte D077x2u[] PROGMEM =  {0x00, 0x3A, 0x30, 0x30, 0x34, 0x44, 0x30, 0x30, 0x34, 0x36, 0x36, 0x44, 0x0D, 0x0A, 0x00, 0x3A, 0x30, 0x30, 0x34, 0x44, 0x30, 0x30, 0x41, 0x30, 0x31, 0x33, 0x0D, 0x0A, 0x00, 0x3A, 0x30, 0x34, 0x34, 0x44, 0x30, 0x30, 0x43, 0x30, 0x30, 0x30, 0x30, 0x34, 0x43, 0x46, 0x46, 0x43, 0x32, 0x30, 0x0D, 0x0A};
const byte D077x2l[] PROGMEM =  {0x00, 0x3A, 0x30, 0x30, 0x34, 0x44, 0x30, 0x30, 0x34, 0x35, 0x36, 0x45, 0x0D, 0x0A, 0x00, 0x3A, 0x30, 0x30, 0x34, 0x44, 0x30, 0x30, 0x41, 0x30, 0x31, 0x33, 0x0D, 0x0A, 0x00, 0x3A, 0x30, 0x34, 0x34, 0x44, 0x30, 0x30, 0x43, 0x30, 0x30, 0x30, 0x30, 0x34, 0x43, 0x46, 0x46, 0x43, 0x32, 0x30, 0x0D, 0x0A};
const byte D084x1u[] PROGMEM =  {0x00, 0x3A, 0x30, 0x30, 0x35, 0x34, 0x30, 0x30, 0x34, 0x32, 0x36, 0x41, 0x0D, 0x0A, 0x00, 0x3A, 0x30, 0x30, 0x35, 0x34, 0x30, 0x30, 0x41, 0x30, 0x30, 0x43, 0x0D, 0x0A, 0x00, 0x3A, 0x30, 0x34, 0x35, 0x34, 0x30, 0x30, 0x43, 0x30, 0x30, 0x30, 0x30, 0x34, 0x43, 0x46, 0x46, 0x43, 0x31, 0x39, 0x0D, 0x0A};
const byte D084x1l[] PROGMEM =  {0x00, 0x3A, 0x30, 0x30, 0x35, 0x34, 0x30, 0x30, 0x34, 0x31, 0x36, 0x42, 0x0D, 0x0A, 0x00, 0x3A, 0x30, 0x30, 0x35, 0x34, 0x30, 0x30, 0x41, 0x30, 0x30, 0x43, 0x0D, 0x0A, 0x00, 0x3A, 0x30, 0x34, 0x35, 0x34, 0x30, 0x30, 0x43, 0x30, 0x30, 0x30, 0x30, 0x34, 0x43, 0x46, 0x46, 0x43, 0x31, 0x39, 0x0D, 0x0A};
const byte D084x2u[] PROGMEM =  {0x00, 0x3A, 0x30, 0x30, 0x35, 0x34, 0x30, 0x30, 0x34, 0x36, 0x36, 0x36, 0x0D, 0x0A, 0x00, 0x3A, 0x30, 0x30, 0x35, 0x34, 0x30, 0x30, 0x41, 0x30, 0x30, 0x43, 0x0D, 0x0A, 0x00, 0x3A, 0x30, 0x34, 0x35, 0x34, 0x30, 0x30, 0x43, 0x30, 0x30, 0x30, 0x30, 0x34, 0x43, 0x46, 0x46, 0x43, 0x31, 0x39, 0x0D, 0x0A};
const byte D084x2l[] PROGMEM =  {0x00, 0x3A, 0x30, 0x30, 0x35, 0x34, 0x30, 0x30, 0x34, 0x35, 0x36, 0x37, 0x0D, 0x0A, 0x00, 0x3A, 0x30, 0x30, 0x35, 0x34, 0x30, 0x30, 0x41, 0x30, 0x30, 0x43, 0x0D, 0x0A, 0x00, 0x3A, 0x30, 0x34, 0x35, 0x34, 0x30, 0x30, 0x43, 0x30, 0x30, 0x30, 0x30, 0x34, 0x43, 0x46, 0x46, 0x43, 0x31, 0x39, 0x0D, 0x0A};
const byte D085x1u[] PROGMEM =  {0x00, 0x3A, 0x30, 0x30, 0x35, 0x35, 0x30, 0x30, 0x34, 0x32, 0x36, 0x39, 0x0D, 0x0A, 0x00, 0x3A, 0x30, 0x30, 0x35, 0x35, 0x30, 0x30, 0x41, 0x30, 0x30, 0x42, 0x0D, 0x0A, 0x00, 0x3A, 0x30, 0x34, 0x35, 0x35, 0x30, 0x30, 0x43, 0x30, 0x30, 0x30, 0x30, 0x34, 0x43, 0x46, 0x46, 0x43, 0x31, 0x38, 0x0D, 0x0A};
const byte D085x1l[] PROGMEM =  {0x00, 0x3A, 0x30, 0x30, 0x35, 0x35, 0x30, 0x30, 0x34, 0x31, 0x36, 0x41, 0x0D, 0x0A, 0x00, 0x3A, 0x30, 0x30, 0x35, 0x35, 0x30, 0x30, 0x41, 0x30, 0x30, 0x42, 0x0D, 0x0A, 0x00, 0x3A, 0x30, 0x34, 0x35, 0x35, 0x30, 0x30, 0x43, 0x30, 0x30, 0x30, 0x30, 0x34, 0x43, 0x46, 0x46, 0x43, 0x31, 0x38, 0x0D, 0x0A};
const byte D085x2u[] PROGMEM =  {0x00, 0x3A, 0x30, 0x30, 0x35, 0x35, 0x30, 0x30, 0x34, 0x36, 0x36, 0x35, 0x0D, 0x0A, 0x00, 0x3A, 0x30, 0x30, 0x35, 0x35, 0x30, 0x30, 0x41, 0x30, 0x30, 0x42, 0x0D, 0x0A, 0x00, 0x3A, 0x30, 0x34, 0x35, 0x35, 0x30, 0x30, 0x43, 0x30, 0x30, 0x30, 0x30, 0x34, 0x43, 0x46, 0x46, 0x43, 0x31, 0x38, 0x0D, 0x0A};
const byte D085x2l[] PROGMEM =  {0x00, 0x3A, 0x30, 0x30, 0x35, 0x35, 0x30, 0x30, 0x34, 0x35, 0x36, 0x36, 0x0D, 0x0A, 0x00, 0x3A, 0x30, 0x30, 0x35, 0x35, 0x30, 0x30, 0x41, 0x30, 0x30, 0x42, 0x0D, 0x0A, 0x00, 0x3A, 0x30, 0x34, 0x35, 0x35, 0x30, 0x30, 0x43, 0x30, 0x30, 0x30, 0x30, 0x34, 0x43, 0x46, 0x46, 0x43, 0x31, 0x38, 0x0D, 0x0A};
const byte D106x1u[] PROGMEM =  {0x00, 0x3A, 0x30, 0x30, 0x36, 0x41, 0x30, 0x30, 0x34, 0x36, 0x35, 0x30, 0x0D, 0x0A, 0x00, 0x3A, 0x30, 0x30, 0x36, 0x41, 0x30, 0x30, 0x34, 0x32, 0x35, 0x34, 0x0D, 0x0A, 0x00, 0x3A, 0x30, 0x30, 0x36, 0x41, 0x30, 0x30, 0x41, 0x30, 0x46, 0x36, 0x0D, 0x0A};
const byte D106x1l[] PROGMEM =  {0x00, 0x3A, 0x30, 0x30, 0x36, 0x41, 0x30, 0x30, 0x34, 0x35, 0x35, 0x31, 0x0D, 0x0A, 0x00, 0x3A, 0x30, 0x30, 0x36, 0x41, 0x30, 0x30, 0x34, 0x31, 0x35, 0x35, 0x0D, 0x0A, 0x00, 0x3A, 0x30, 0x30, 0x36, 0x41, 0x30, 0x30, 0x41, 0x30, 0x46, 0x36, 0x0D, 0x0A};
const byte D119x1u[] PROGMEM =  {0x00, 0x3A, 0x30, 0x30, 0x37, 0x37, 0x30, 0x30, 0x34, 0x36, 0x34, 0x33, 0x0D, 0x0A, 0x00, 0x3A, 0x30, 0x30, 0x37, 0x37, 0x30, 0x30, 0x34, 0x32, 0x34, 0x37, 0x0D, 0x0A, 0x00, 0x3A, 0x30, 0x30, 0x37, 0x37, 0x30, 0x30, 0x41, 0x30, 0x45, 0x39, 0x0D, 0x0A};
const byte D119x1l[] PROGMEM =  {0x00, 0x3A, 0x30, 0x30, 0x37, 0x37, 0x30, 0x30, 0x34, 0x35, 0x34, 0x34, 0x0D, 0x0A, 0x00, 0x3A, 0x30, 0x30, 0x37, 0x37, 0x30, 0x30, 0x34, 0x31, 0x34, 0x38, 0x0D, 0x0A, 0x00, 0x3A, 0x30, 0x30, 0x37, 0x37, 0x30, 0x30, 0x41, 0x30, 0x45, 0x39, 0x0D, 0x0A};
const byte D120x1u[] PROGMEM =  {0x00, 0x3A, 0x30, 0x30, 0x37, 0x38, 0x30, 0x30, 0x34, 0x36, 0x34, 0x32, 0x0D, 0x0A, 0x00, 0x3A, 0x30, 0x30, 0x37, 0x38, 0x30, 0x30, 0x34, 0x32, 0x34, 0x36, 0x0D, 0x0A, 0x00, 0x3A, 0x30, 0x30, 0x37, 0x38, 0x30, 0x30, 0x41, 0x30, 0x45, 0x38, 0x0D, 0x0A};
const byte D120x1l[] PROGMEM =  {0x00, 0x3A, 0x30, 0x30, 0x37, 0x38, 0x30, 0x30, 0x34, 0x35, 0x34, 0x33, 0x0D, 0x0A, 0x00, 0x3A, 0x30, 0x30, 0x37, 0x38, 0x30, 0x30, 0x34, 0x31, 0x34, 0x37, 0x0D, 0x0A, 0x00, 0x3A, 0x30, 0x30, 0x37, 0x38, 0x30, 0x30, 0x41, 0x30, 0x45, 0x38, 0x0D, 0x0A};
const byte D121x1u[] PROGMEM =  {0x00, 0x3A, 0x30, 0x30, 0x37, 0x39, 0x30, 0x30, 0x34, 0x36, 0x34, 0x31, 0x0D, 0x0A, 0x00, 0x3A, 0x30, 0x30, 0x37, 0x39, 0x30, 0x30, 0x34, 0x32, 0x34, 0x35, 0x0D, 0x0A, 0x00, 0x3A, 0x30, 0x30, 0x37, 0x39, 0x30, 0x30, 0x41, 0x30, 0x45, 0x37, 0x0D, 0x0A};
const byte D121x1l[] PROGMEM =  {0x00, 0x3A, 0x30, 0x30, 0x37, 0x39, 0x30, 0x30, 0x34, 0x35, 0x34, 0x32, 0x0D, 0x0A, 0x00, 0x3A, 0x30, 0x30, 0x37, 0x39, 0x30, 0x30, 0x34, 0x31, 0x34, 0x36, 0x0D, 0x0A, 0x00, 0x3A, 0x30, 0x30, 0x37, 0x39, 0x30, 0x30, 0x41, 0x30, 0x45, 0x37, 0x0D, 0x0A};
const byte D123x1u[] PROGMEM =  {0x00, 0x3A, 0x30, 0x30, 0x37, 0x42, 0x30, 0x30, 0x34, 0x36, 0x33, 0x46, 0x0D, 0x0A, 0x00, 0x3A, 0x30, 0x30, 0x37, 0x42, 0x30, 0x30, 0x34, 0x32, 0x34, 0x33, 0x0D, 0x0A, 0x00, 0x3A, 0x30, 0x30, 0x37, 0x42, 0x30, 0x30, 0x41, 0x30, 0x45, 0x35, 0x0D, 0x0A};
const byte D123x1l[] PROGMEM =  {0x00, 0x3A, 0x30, 0x30, 0x37, 0x42, 0x30, 0x30, 0x34, 0x35, 0x34, 0x30, 0x0D, 0x0A, 0x00, 0x3A, 0x30, 0x30, 0x37, 0x42, 0x30, 0x30, 0x34, 0x31, 0x34, 0x34, 0x0D, 0x0A, 0x00, 0x3A, 0x30, 0x30, 0x37, 0x42, 0x30, 0x30, 0x41, 0x30, 0x45, 0x35, 0x0D, 0x0A};
const byte D124x1u[] PROGMEM =  {0x00, 0x3A, 0x30, 0x30, 0x37, 0x43, 0x30, 0x30, 0x34, 0x36, 0x33, 0x45, 0x0D, 0x0A, 0x00, 0x3A, 0x30, 0x30, 0x37, 0x43, 0x30, 0x30, 0x34, 0x32, 0x34, 0x32, 0x0D, 0x0A, 0x00, 0x3A, 0x30, 0x30, 0x37, 0x43, 0x30, 0x30, 0x41, 0x30, 0x45, 0x34, 0x0D, 0x0A};
const byte D124x1l[] PROGMEM =  {0x00, 0x3A, 0x30, 0x30, 0x37, 0x43, 0x30, 0x30, 0x34, 0x35, 0x33, 0x46, 0x0D, 0x0A, 0x00, 0x3A, 0x30, 0x30, 0x37, 0x43, 0x30, 0x30, 0x34, 0x31, 0x34, 0x33, 0x0D, 0x0A, 0x00, 0x3A, 0x30, 0x30, 0x37, 0x43, 0x30, 0x30, 0x41, 0x30, 0x45, 0x34, 0x0D, 0x0A};
const byte D125x1u[] PROGMEM =  {0x00, 0x3A, 0x30, 0x30, 0x37, 0x44, 0x30, 0x30, 0x34, 0x36, 0x33, 0x44, 0x0D, 0x0A, 0x00, 0x3A, 0x30, 0x30, 0x37, 0x44, 0x30, 0x30, 0x34, 0x32, 0x34, 0x31, 0x0D, 0x0A, 0x00, 0x3A, 0x30, 0x30, 0x37, 0x44, 0x30, 0x30, 0x41, 0x30, 0x45, 0x33, 0x0D, 0x0A};
const byte D125x1l[] PROGMEM =  {0x00, 0x3A, 0x30, 0x30, 0x37, 0x44, 0x30, 0x30, 0x34, 0x35, 0x33, 0x45, 0x0D, 0x0A, 0x00, 0x3A, 0x30, 0x30, 0x37, 0x44, 0x30, 0x30, 0x34, 0x31, 0x34, 0x32, 0x0D, 0x0A, 0x00, 0x3A, 0x30, 0x30, 0x37, 0x44, 0x30, 0x30, 0x41, 0x30, 0x45, 0x33, 0x0D, 0x0A};
const byte D138x1u[] PROGMEM =  {0x00, 0x3A, 0x30, 0x30, 0x38, 0x41, 0x30, 0x30, 0x34, 0x36, 0x33, 0x30, 0x0D, 0x0A, 0x00, 0x3A, 0x30, 0x30, 0x38, 0x41, 0x30, 0x30, 0x34, 0x32, 0x33, 0x34, 0x0D, 0x0A, 0x00, 0x3A, 0x30, 0x30, 0x38, 0x41, 0x30, 0x30, 0x41, 0x30, 0x44, 0x36, 0x0D, 0x0A};
const byte D138x1l[] PROGMEM =  {0x00, 0x3A, 0x30, 0x30, 0x38, 0x41, 0x30, 0x30, 0x34, 0x35, 0x33, 0x31, 0x0D, 0x0A, 0x00, 0x3A, 0x30, 0x30, 0x38, 0x41, 0x30, 0x30, 0x34, 0x31, 0x33, 0x35, 0x0D, 0x0A, 0x00, 0x3A, 0x30, 0x30, 0x38, 0x41, 0x30, 0x30, 0x41, 0x30, 0x44, 0x36, 0x0D, 0x0A};

int S;
int k;
int u;
unsigned int D;


void setup() {
  pinMode(13, OUTPUT);    //LED indikatorius zalias
  pinMode(12, OUTPUT);    //LED indikatorius raudonas
  pinMode(2, INPUT);      //evakuacija start
  Serial.begin(9600);
  wdt_enable(WDTO_8S);
}
void loop() {
  S = 0;
  delay(700);
  digitalWrite(13, HIGH);
  delay(700);
  digitalWrite(13, LOW);
  wdt_reset();
  if (digitalRead(2) == HIGH)                                                               // jei 2 high - atrakinam
  {
    digitalWrite(12, HIGH);
    delay(1500);
    if (S < 1) {
      for (k = 0; k < 50; k++) {                   //
        D = pgm_read_byte(D069x1l + k);            // 69.1 duru uzrakinimas
        Serial.write(D);                          //
      }
      delay(40);
      for (k = 0; k < 50; k++) {                  //
        D = pgm_read_byte(D069x2l + k);            // 69.2 duru uzrakinimas
        Serial.write(D);                          //
      }
      delay(40);
      for (k = 0; k < 50; k++) {                   //
        D = pgm_read_byte(D070x1l + k);            // 70.1 duru uzrakinimas
        Serial.write(D);                          //
      }
      delay(40);
      for (k = 0; k < 50; k++) {                  //
        D = pgm_read_byte(D070x2l + k);            // 70.2 duru uzrakinimas
        Serial.write(D);                          //
      }
      delay(40);
      for (k = 0; k < 50; k++) {                   //
        D = pgm_read_byte(D071x1l + k);            // 71.1 duru uzrakinimas
        Serial.write(D);                          //
      }
      delay(40);
      for (k = 0; k < 50; k++) {                  //
        D = pgm_read_byte(D071x2l + k);            // 71.2 duru uzrakinimas
        Serial.write(D);                          //
      }
      delay(40);
      for (k = 0; k < 50; k++) {                   //
        D = pgm_read_byte(D072x1l + k);            // 72.1 duru uzrakinimas
        Serial.write(D);                          //
      }
      delay(40);
      for (k = 0; k < 50; k++) {                  //
        D = pgm_read_byte(D072x2l + k);            // 72.2 duru uzrakinimas
        Serial.write(D);                          //
      }
      delay(40);
      for (k = 0; k < 50; k++) {                   //
        D = pgm_read_byte(D073x1l + k);            // 73.1 duru uzrakinimas
        Serial.write(D);                          //
      }
      delay(40);
      for (k = 0; k < 50; k++) {                  //
        D = pgm_read_byte(D073x2l + k);            // 73.2 duru uzrakinimas
        Serial.write(D);                          //
      }
      delay(40);
      for (k = 0; k < 50; k++) {                   //
        D = pgm_read_byte(D076x1l + k);            // 76.1 duru uzrakinimas
        Serial.write(D);                          //
      }
      delay(40);
      for (k = 0; k < 50; k++) {                  //
        D = pgm_read_byte(D076x2l + k);            // 76.2 duru uzrakinimas
        Serial.write(D);                          //
      }
      delay(40);
      for (k = 0; k < 50; k++) {                   //
        D = pgm_read_byte(D077x1l + k);            // 77.1 duru uzrakinimas
        Serial.write(D);                          //
      }
      delay(40);
      for (k = 0; k < 50; k++) {                  //
        D = pgm_read_byte(D077x2l + k);            // 77.2 duru uzrakinimas
        Serial.write(D);                          //
      }
      delay(40);
      for (k = 0; k < 50; k++) {                   //
        D = pgm_read_byte(D084x1l + k);            // 84.1 duru uzrakinimas
        Serial.write(D);                          //
      }
      delay(40);
      for (k = 0; k < 50; k++) {                   //
        D = pgm_read_byte(D084x2l + k);            // 84.2 duru uzrakinimas
        Serial.write(D);                          //
      }
      delay(40);
      for (k = 0; k < 50; k++) {                  //
        D = pgm_read_byte(D085x1l + k);            // 85.1 duru uzrakinimas
        Serial.write(D);                          //
      }
      delay(40);
      for (k = 0; k < 50; k++) {                   //
        D = pgm_read_byte(D085x2l + k);            // 85.2 duru uzrakinimas
        Serial.write(D);                          //
      }
      delay(40);
      for (k = 0; k < 42; k++) {                   //
        D = pgm_read_byte(D106x1l + k);            // 106.1 duru uzrakinimas
        Serial.write(D);                          //
      }
      delay(40);
      for (k = 0; k < 42; k++) {                  //
        D = pgm_read_byte(D119x1l + k);            // 119.1 duru uzrakinimas
        Serial.write(D);                          //
      }
      delay(40);
      for (k = 0; k < 42; k++) {                  //
        D = pgm_read_byte(D120x1l + k);            //120.1 duru uzrakinimas
        Serial.write(D);                          //
      }
      delay(40);
      for (k = 0; k < 42; k++) {                   //
        D = pgm_read_byte(D121x1l + k);            //121.1 duru uzrakinimas
        Serial.write(D);                          //
      }
      delay(40);
      for (k = 0; k < 42; k++) {                  //
        D = pgm_read_byte(D123x1l + k);            // 123.1 duru uzrakinimas
        Serial.write(D);                          //
      }
      delay(40);
      for (k = 0; k < 42; k++) {                   //
        D = pgm_read_byte(D124x1l + k);            // 124.1 duru uzrakinimas
        Serial.write(D);                          //
      }
      delay(40);
      for (k = 0; k < 42; k++) {                  //
        D = pgm_read_byte(D125x1l + k);            // 125.1 duru uzrakinimas
        Serial.write(D);                          //
      }
      delay(40);
      for (k = 0; k < 42; k++) {                  //
        D = pgm_read_byte(D138x1l + k);            // 138.1 duru uzrakinimas
        Serial.write(D);                          //
      }
      delay(40);
      digitalWrite(12, LOW);
      wdt_reset();
      S = S++;
    }


atrakinam:
    delay(700);
    digitalWrite(12, HIGH);
    for (k = 0; k < 50; k++) {                   //
      D = pgm_read_byte(D069x1u + k);            // 69.1 duru atrakinimas
      Serial.write(D);                          //
    }
    delay(40);
    for (k = 0; k < 50; k++) {                  //
      D = pgm_read_byte(D069x2u + k);            // 69.2 duru atrakinimas
      Serial.write(D);                          //
    }
    delay(40);
    for (k = 0; k < 50; k++) {                   //
      D = pgm_read_byte(D070x1u + k);            // 70.1 duru atrakinimas
      Serial.write(D);                          //
    }
    delay(40);
    for (k = 0; k < 50; k++) {                  //
      D = pgm_read_byte(D070x2u + k);            // 70.2 duru atrakinimas
      Serial.write(D);                          //
    }
    delay(40);
    for (k = 0; k < 50; k++) {                   //
      D = pgm_read_byte(D071x1u + k);            // 71.1 duru atrakinimas
      Serial.write(D);                          //
    }
    delay(40);
    for (k = 0; k < 50; k++) {                  //
      D = pgm_read_byte(D071x2u + k);            // 71.2 duru atrakinimas
      Serial.write(D);                          //
    }
    delay(40);
    for (k = 0; k < 50; k++) {                   //
      D = pgm_read_byte(D072x1u + k);            // 72.1 duru atrakinimas
      Serial.write(D);                          //
    }
    delay(40);
    for (k = 0; k < 50; k++) {                  //
      D = pgm_read_byte(D072x2u + k);            // 72.2 duru atrakinimas
      Serial.write(D);                          //
    }
    delay(40);
    for (k = 0; k < 50; k++) {                   //
      D = pgm_read_byte(D073x1u + k);            // 73.1 duru atrakinimas
      Serial.write(D);                          //
    }
    delay(40);
    for (k = 0; k < 50; k++) {                  //
      D = pgm_read_byte(D073x2u + k);            // 73.2 duru atrakinimas
      Serial.write(D);                          //
    }
    delay(40);
    for (k = 0; k < 50; k++) {                   //
      D = pgm_read_byte(D076x1u + k);            // 76.1 duru atrakinimas
      Serial.write(D);                          //
    }
    delay(40);
    for (k = 0; k < 50; k++) {                  //
      D = pgm_read_byte(D076x2u + k);            // 76.2 duru atrakinimas
      Serial.write(D);                          //
    }
    delay(40);
    for (k = 0; k < 50; k++) {                   //
      D = pgm_read_byte(D077x1u + k);            // 77.1 duru atrakinimas
      Serial.write(D);                          //
    }
    delay(40);
    for (k = 0; k < 50; k++) {                  //
      D = pgm_read_byte(D077x2u + k);            // 77.2 duru atrakinimas
      Serial.write(D);                          //
    }
    delay(40);
    for (k = 0; k < 50; k++) {                   //
      D = pgm_read_byte(D084x1u + k);            // 84.1 duru atrakinimas
      Serial.write(D);                          //
    }
    delay(40);
    for (k = 0; k < 50; k++) {                   //
      D = pgm_read_byte(D084x2u + k);            // 84.2 duru atrakinimas
      Serial.write(D);                          //
    }
    delay(40);
    for (k = 0; k < 50; k++) {                  //
      D = pgm_read_byte(D085x1u + k);            // 85.1 duru atrakinimas
      Serial.write(D);                          //
    }
    delay(40);
    for (k = 0; k < 50; k++) {                   //
      D = pgm_read_byte(D085x2u + k);            // 85.2 duru atrakinimas
      Serial.write(D);                          //
    }
    delay(40);
    for (k = 0; k < 42; k++) {                   //
      D = pgm_read_byte(D106x1u + k);            // 106.1 duru atrakinimas
      Serial.write(D);                          //
    }
    delay(40);
    for (k = 0; k < 42; k++) {                  //
      D = pgm_read_byte(D119x1u + k);            // 119.1 duru atrakinimas
      Serial.write(D);                          //
    }
    delay(40);
    for (k = 0; k < 42; k++) {                  //
      D = pgm_read_byte(D120x1u + k);            //120.1 duru atrakinimas
      Serial.write(D);                          //
    }
    delay(40);
    for (k = 0; k < 42; k++) {                   //
      D = pgm_read_byte(D121x1u + k);            //121.1 duru atrakinimas
      Serial.write(D);                          //
    }
    delay(40);
    for (k = 0; k < 42; k++) {                  //
      D = pgm_read_byte(D123x1u + k);            // 123.1 duru atrakinimas
      Serial.write(D);                          //
    }
    delay(40);
    for (k = 0; k < 42; k++) {                   //
      D = pgm_read_byte(D124x1u + k);            // 124.1 duru atrakinimas
      Serial.write(D);                          //
    }
    delay(40);
    for (k = 0; k < 42; k++) {                  //
      D = pgm_read_byte(D125x1u + k);            // 125.1 duru atrakinimas
      Serial.write(D);                          //
    }
    delay(40);
    for (k = 0; k < 42; k++) {                  //
      D = pgm_read_byte(D138x1u + k);            // 138.1 duru atrakinimas
      Serial.write(D);                          //
    }
    delay(40);
    wdt_reset();

uzrakinam:
    if (digitalRead(2) == LOW)                                                  // jei 2 low - uzrakinam


      for (u = 0; u < 6; u++) {
        for (k = 0; k < 50; k++) {                   //
          D = pgm_read_byte(D069x1l + k);            // 69.1 duru uzrakinimas
          Serial.write(D);                          //
        }
        delay(40);
        for (k = 0; k < 50; k++) {                  //
          D = pgm_read_byte(D069x2l + k);            // 69.2 duru uzrakinimas
          Serial.write(D);                          //
        }
        delay(40);
        for (k = 0; k < 50; k++) {                   //
          D = pgm_read_byte(D070x1l + k);            // 70.1 duru uzrakinimas
          Serial.write(D);                          //
        }
        delay(40);
        for (k = 0; k < 50; k++) {                  //
          D = pgm_read_byte(D070x2l + k);            // 70.2 duru uzrakinimas
          Serial.write(D);                          //
        }
        delay(40);
        for (k = 0; k < 50; k++) {                   //
          D = pgm_read_byte(D071x1l + k);            // 71.1 duru uzrakinimas
          Serial.write(D);                          //
        }
        delay(40);
        for (k = 0; k < 50; k++) {                  //
          D = pgm_read_byte(D071x2l + k);            // 71.2 duru uzrakinimas
          Serial.write(D);                          //
        }
        delay(40);
        for (k = 0; k < 50; k++) {                   //
          D = pgm_read_byte(D072x1l + k);            // 72.1 duru uzrakinimas
          Serial.write(D);                          //
        }
        delay(40);
        for (k = 0; k < 50; k++) {                  //
          D = pgm_read_byte(D072x2l + k);            // 72.2 duru uzrakinimas
          Serial.write(D);                          //
        }
        delay(40);
        for (k = 0; k < 50; k++) {                   //
          D = pgm_read_byte(D073x1l + k);            // 73.1 duru uzrakinimas
          Serial.write(D);                          //
        }
        delay(40);
        for (k = 0; k < 50; k++) {                  //
          D = pgm_read_byte(D073x2l + k);            // 73.2 duru uzrakinimas
          Serial.write(D);                          //
        }
        delay(40);
        for (k = 0; k < 50; k++) {                   //
          D = pgm_read_byte(D076x1l + k);            // 76.1 duru uzrakinimas
          Serial.write(D);                          //
        }
        delay(40);
        for (k = 0; k < 50; k++) {                  //
          D = pgm_read_byte(D076x2l + k);            // 76.2 duru uzrakinimas
          Serial.write(D);                          //
        }
        delay(40);
        for (k = 0; k < 50; k++) {                   //
          D = pgm_read_byte(D077x1l + k);            // 77.1 duru uzrakinimas
          Serial.write(D);                          //
        }
        delay(40);
        for (k = 0; k < 50; k++) {                  //
          D = pgm_read_byte(D077x2l + k);            // 77.2 duru uzrakinimas
          Serial.write(D);                          //
        }
        delay(40);
        for (k = 0; k < 50; k++) {                   //
          D = pgm_read_byte(D084x1l + k);            // 84.1 duru uzrakinimas
          Serial.write(D);                          //
        }
        delay(40);
        for (k = 0; k < 50; k++) {                   //
          D = pgm_read_byte(D084x2l + k);            // 84.2 duru uzrakinimas
          Serial.write(D);                          //
        }
        delay(40);
        for (k = 0; k < 50; k++) {                  //
          D = pgm_read_byte(D085x1l + k);            // 85.1 duru uzrakinimas
          Serial.write(D);                          //
        }
        delay(40);
        for (k = 0; k < 50; k++) {                   //
          D = pgm_read_byte(D085x2l + k);            // 85.2 duru uzrakinimas
          Serial.write(D);                          //
        }
        delay(40);
        for (k = 0; k < 42; k++) {                   //
          D = pgm_read_byte(D106x1l + k);            // 106.1 duru uzrakinimas
          Serial.write(D);                          //
        }
        delay(40);
        for (k = 0; k < 42; k++) {                  //
          D = pgm_read_byte(D119x1l + k);            // 119.1 duru uzrakinimas
          Serial.write(D);                          //
        }
        delay(40);
        for (k = 0; k < 42; k++) {                  //
          D = pgm_read_byte(D120x1l + k);            //120.1 duru uzrakinimas
          Serial.write(D);                          //
        }
        delay(40);
        for (k = 0; k < 42; k++) {                   //
          D = pgm_read_byte(D121x1l + k);            //121.1 duru uzrakinimas
          Serial.write(D);                          //
        }
        delay(40);
        for (k = 0; k < 42; k++) {                  //
          D = pgm_read_byte(D123x1l + k);            // 123.1 duru uzrakinimas
          Serial.write(D);                          //
        }
        delay(40);
        for (k = 0; k < 42; k++) {                   //
          D = pgm_read_byte(D124x1l + k);            // 124.1 duru uzrakinimas
          Serial.write(D);                          //
        }
        delay(40);
        for (k = 0; k < 42; k++) {                  //
          D = pgm_read_byte(D125x1l + k);            // 125.1 duru uzrakinimas
          Serial.write(D);                          //
        }
        delay(40);
        for (k = 0; k < 42; k++) {                  //
          D = pgm_read_byte(D138x1l + k);            // 138.1 duru uzrakinimas
          Serial.write(D);                          //
        }
        delay(200);
        wdt_reset();
        u = u++;
      }
    if (digitalRead(2) == HIGH)
    {
      goto atrakinam;
    }

    digitalWrite(12, LOW);
  }
}
